{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "f2addf07981246caaca189d57c32c11d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "1. Al-Fatihah (7 ayat)",
              "2. Al-Baqarah (286 ayat)",
              "3. Ali 'Imran (200 ayat)",
              "4. An-Nisa' (176 ayat)",
              "5. Al-Ma'idah (120 ayat)",
              "6. Al-An'am (165 ayat)",
              "7. Al-A'raf (206 ayat)",
              "8. Al-Anfal (75 ayat)",
              "9. At-Taubah (129 ayat)",
              "10. Yunus (109 ayat)",
              "11. Hud (123 ayat)",
              "12. Yusuf (111 ayat)",
              "13. Ar-Ra'd (43 ayat)",
              "14. Ibrahim (52 ayat)",
              "15. Al-Hijr (99 ayat)",
              "16. An-Nahl (128 ayat)",
              "17. Al-Isra' (111 ayat)",
              "18. Al-Kahf (110 ayat)",
              "19. Maryam (98 ayat)",
              "20. Ta-Ha (135 ayat)",
              "21. Al-Anbiya' (112 ayat)",
              "22. Al-Hajj (78 ayat)",
              "23. Al-Mu'minun (118 ayat)",
              "24. An-Nur (64 ayat)",
              "25. Al-Furqan (77 ayat)",
              "26. Ash-Shu'ara' (227 ayat)",
              "27. An-Naml (93 ayat)",
              "28. Al-Qasas (88 ayat)",
              "29. Al-Ankabut (69 ayat)",
              "30. Ar-Rum (60 ayat)",
              "31. Luqman (34 ayat)",
              "32. As-Sajdah (30 ayat)",
              "33. Al-Ahzab (73 ayat)",
              "34. Saba' (54 ayat)",
              "35. Fatir (45 ayat)",
              "36. Ya-Sin (83 ayat)",
              "37. As-Saffat (182 ayat)",
              "38. Sad (88 ayat)",
              "39. Az-Zumar (75 ayat)",
              "40. Ghafir (85 ayat)",
              "41. Fussilat (54 ayat)",
              "42. Ash-Shura (53 ayat)",
              "43. Az-Zukhruf (89 ayat)",
              "44. Ad-Dukhan (59 ayat)",
              "45. Al-Jathiyah (37 ayat)",
              "46. Al-Ahqaf (35 ayat)",
              "47. Muhammad (38 ayat)",
              "48. Al-Fath (29 ayat)",
              "49. Al-Hujurat (18 ayat)",
              "50. Qaf (45 ayat)",
              "51. Adh-Dhariyat (60 ayat)",
              "52. At-Tur (49 ayat)",
              "53. An-Najm (62 ayat)",
              "54. Al-Qamar (55 ayat)",
              "55. Ar-Rahman (78 ayat)",
              "56. Al-Waqi'ah (96 ayat)",
              "57. Al-Hadid (29 ayat)",
              "58. Al-Mujadila (22 ayat)",
              "59. Al-Hashr (24 ayat)",
              "60. Al-Mumtahina (13 ayat)",
              "61. As-Saff (14 ayat)",
              "62. Al-Jumu'ah (11 ayat)",
              "63. Al-Munafiqun (11 ayat)",
              "64. At-Taghabun (18 ayat)",
              "65. At-Talaq (12 ayat)",
              "66. At-Tahrim (12 ayat)",
              "67. Al-Mulk (30 ayat)",
              "68. Al-Qalam (52 ayat)",
              "69. Al-Haqqah (52 ayat)",
              "70. Al-Ma'arij (44 ayat)",
              "71. Nuh (28 ayat)",
              "72. Al-Jinn (28 ayat)",
              "73. Al-Muzzammil (20 ayat)",
              "74. Al-Muddathir (56 ayat)",
              "75. Al-Qiyamah (40 ayat)",
              "76. Al-Insan (31 ayat)",
              "77. Al-Mursalat (50 ayat)",
              "78. An-Naba' (40 ayat)",
              "79. An-Nazi'at (46 ayat)",
              "80. Abasa (42 ayat)",
              "81. At-Takwir (29 ayat)",
              "82. Al-Infitar (19 ayat)",
              "83. Al-Mutaffifin (36 ayat)",
              "84. Al-Inshiqaq (25 ayat)",
              "85. Al-Buruj (22 ayat)",
              "86. At-Tariq (17 ayat)",
              "87. Al-A'la (19 ayat)",
              "88. Al-Ghashiyah (26 ayat)",
              "89. Al-Fajr (30 ayat)",
              "90. Al-Balad (20 ayat)",
              "91. Ash-Shams (15 ayat)",
              "92. Al-Layl (21 ayat)",
              "93. Ad-Duha (11 ayat)",
              "94. Ash-Sharh (8 ayat)",
              "95. At-Tin (8 ayat)",
              "96. Al-Alaq (19 ayat)",
              "97. Al-Qadr (5 ayat)",
              "98. Al-Bayyina (8 ayat)",
              "99. Az-Zalzalah (8 ayat)",
              "100. Al-Adiyat (11 ayat)",
              "101. Al-Qari'a (11 ayat)",
              "102. At-Takathur (8 ayat)",
              "103. Al-Asr (3 ayat)",
              "104. Al-Humazah (9 ayat)",
              "105. Al-Fil (5 ayat)",
              "106. Quraish (4 ayat)",
              "107. Al-Ma'un (7 ayat)",
              "108. Al-Kawthar (3 ayat)",
              "109. Al-Kafirun (6 ayat)",
              "110. An-Nasr (3 ayat)",
              "111. Al-Masad (5 ayat)",
              "112. Al-Ikhlas (4 ayat)",
              "113. Al-Falaq (5 ayat)",
              "114. An-Nas (6 ayat)"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "Surat:",
            "description_tooltip": null,
            "disabled": false,
            "index": 0,
            "layout": "IPY_MODEL_00ccd24811b94110a68153c71ee2483c",
            "style": "IPY_MODEL_fe153a544d674eda831afb4e68cd6bcc"
          }
        },
        "00ccd24811b94110a68153c71ee2483c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "fe153a544d674eda831afb4e68cd6bcc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "9c779c45a3884bfcb6e94f29cff08a52": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Klik copy",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_3dd30600874e4a2e848011de024c2ed9",
            "style": "IPY_MODEL_79c3bcc8ae2f4e989508b2326015f736",
            "tooltip": ""
          }
        },
        "3dd30600874e4a2e848011de024c2ed9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "79c3bcc8ae2f4e989508b2326015f736": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "db59ecac3a5e4b00b3db4d1a9dc49bdf": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_d0b9ea1dc76b4828bb884f6d2d8e7af4",
            "msg_id": "",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "text/plain": "<IPython.core.display.Javascript object>",
                  "application/javascript": "\n            navigator.clipboard.writeText(`4, 13, 9, 9, 7, 10, 11, 9, 8, 13, 13, 9, 11, 14, 10, 5, 10, 8, 8, 10, 8, 8, 7, 5, 5, 8, 3, 11, 11, 7, 13, 6, 7`);\n            "
                },
                "metadata": {}
              },
              {
                "output_type": "stream",
                "name": "stdout",
                "text": [
                  "Copied to clipboard! Silahkan paste ke kotak input Splits\n"
                ]
              }
            ]
          }
        },
        "d0b9ea1dc76b4828bb884f6d2d8e7af4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "cf8896857c2744ff94264d8df3562efc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Copy",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_b2d276d71e964c8f9abd8549297a2d08",
            "style": "IPY_MODEL_b3ea380ed45a491697c5fa895c005ffd",
            "tooltip": ""
          }
        },
        "b2d276d71e964c8f9abd8549297a2d08": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "b3ea380ed45a491697c5fa895c005ffd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "a83b778e1855429d9f38292bd0f82eb1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "LabelModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "LabelView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_6cf5db5034054cb3bf51c960197f564c",
            "placeholder": "​",
            "style": "IPY_MODEL_e4aaa514fc144a98a32fa3395cc394d2",
            "value": ""
          }
        },
        "6cf5db5034054cb3bf51c960197f564c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e4aaa514fc144a98a32fa3395cc394d2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "46f5dd5bf3c941b58d6d873ba2ba3599": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntTextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "IntTextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "IntTextView",
            "continuous_update": false,
            "description": "Surah Number:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_51552ff0aa7b47e1a3792988c6248314",
            "step": 1,
            "style": "IPY_MODEL_3267ab554783400dadd535d1140bc32f",
            "value": 72
          }
        },
        "51552ff0aa7b47e1a3792988c6248314": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "3267ab554783400dadd535d1140bc32f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "f94fa04fc96b42e89f9031900ccbbd12": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntTextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "IntTextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "IntTextView",
            "continuous_update": false,
            "description": "From Ayat:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_a635395e665748798c5d7fe80619bf13",
            "step": 1,
            "style": "IPY_MODEL_4af96922826f41dbb311e465fad7394f",
            "value": 1
          }
        },
        "a635395e665748798c5d7fe80619bf13": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "4af96922826f41dbb311e465fad7394f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "d097eec430c142bc844b59b04f7bfc17": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntTextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "IntTextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "IntTextView",
            "continuous_update": false,
            "description": "To Ayat:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_1594f095bd1d426ba65c56d23f1fd179",
            "step": 1,
            "style": "IPY_MODEL_d60f7d2d2fd44fe5878bfea6edbcfc9a",
            "value": 28
          }
        },
        "1594f095bd1d426ba65c56d23f1fd179": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "d60f7d2d2fd44fe5878bfea6edbcfc9a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "d7d65b188f6a42daa5e0d00eaaf38aff": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "TextModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "TextModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "TextView",
            "continuous_update": true,
            "description": "Splits:",
            "description_tooltip": null,
            "disabled": false,
            "layout": "IPY_MODEL_063839b9bd9848888337f8787b2e6573",
            "placeholder": "​",
            "style": "IPY_MODEL_8c818073da1d42a798b0db2d6da69c95",
            "value": "4, 13, 9, 9, 7, 10, 11, 9, 8, 13, 13, 9, 11, 14, 10, 5, 10, 8, 8, 10, 8, 8, 7, 5, 5, 8, 3, 11, 11, 7, 13, 6, 6"
          }
        },
        "063839b9bd9848888337f8787b2e6573": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "8c818073da1d42a798b0db2d6da69c95": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "da4765fd2ed14754aaaee33be5081cb5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Run Kode Kedua",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_98776b42fff943719b0f5a95fbaa3045",
            "style": "IPY_MODEL_a853df66ba134d96b1f43a2652dba308",
            "tooltip": ""
          }
        },
        "98776b42fff943719b0f5a95fbaa3045": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "a853df66ba134d96b1f43a2652dba308": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "481c011feed0478ebab3988167e5a940": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "Copy",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_046a4caf4f9b4389afd94da3eed44437",
            "style": "IPY_MODEL_7319e56b30b943ceaf8a47f81cdd683f",
            "tooltip": ""
          }
        },
        "046a4caf4f9b4389afd94da3eed44437": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "7319e56b30b943ceaf8a47f81cdd683f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": null,
            "font_weight": ""
          }
        },
        "a9a0695aa684450bbc95df670eb40389": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "LabelModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "LabelView",
            "description": "",
            "description_tooltip": null,
            "layout": "IPY_MODEL_27fbeab9840f44c8a613871efd4c0859",
            "placeholder": "​",
            "style": "IPY_MODEL_aaf12083a8204f1faf88120b4b1b5d8c",
            "value": ""
          }
        },
        "27fbeab9840f44c8a613871efd4c0859": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "aaf12083a8204f1faf88120b4b1b5d8c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/dickymiswardi/videomurottal/blob/main/Beta9.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Tutorial: YouTube.com"
      ],
      "metadata": {
        "id": "8Z2QyLOrxeTW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Download font: https://s.id/hafsfont"
      ],
      "metadata": {
        "id": "DV5nvkgnxzX8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Download VN Video Editor: https://s.id/vlognow"
      ],
      "metadata": {
        "id": "kLS0CKpYx0vB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 1. INSTALL WHISPER FOR TEKS QURAN VIDEO MUROTTAL BY DICKY MISWARDI { display-mode: \"form\" }\n",
        "#@markdown Klik untuk menginstal.\n",
        "\n",
        "%%capture\n",
        "# INSTALL WHISPER AI\n",
        "!pip install git+https://github.com/openai/whisper.git\n",
        "!sudo apt update && sudo apt install ffmpeg\n",
        "!pip install requests\n",
        "!pip install ipywidgets"
      ],
      "metadata": {
        "id": "hRUbQ9bmZ5kR"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 2. TRANSKRIP AUDIO QURAN TO ARABIC TEXT { display-mode: \"form\" }\n",
        "#@markdown Isi link .mp3 dari internet atau file di Google Drive kemudian klik proses.\n",
        "\n",
        "import whisper\n",
        "\n",
        "def transcribe_audio_to_srt(audio_path, srt_path):\n",
        "    # Load Whisper high accuracy model\n",
        "    model = whisper.load_model(\"medium\")\n",
        "\n",
        "    # Transcribe the audio file\n",
        "    result = model.transcribe(audio_path, language=\"ar\")\n",
        "\n",
        "    # Get segments from the transcription result\n",
        "    segments = result['segments']\n",
        "\n",
        "    # Write to SRT file and print to console\n",
        "    with open(srt_path, 'w', encoding='utf-8') as srt_file:\n",
        "        for i, segment in enumerate(segments):\n",
        "            start = segment['start']\n",
        "            end = segment['end']\n",
        "            text = segment['text'].strip()\n",
        "\n",
        "            # Convert start and end times to SRT format\n",
        "            start_srt = convert_to_srt_time(start)\n",
        "            end_srt = convert_to_srt_time(end)\n",
        "\n",
        "            # Create the SRT block\n",
        "            srt_block = f\"{i + 1}\\n{start_srt} --> {end_srt}\\n{text}\\n\\n\"\n",
        "\n",
        "            # Write to file\n",
        "            srt_file.write(srt_block)\n",
        "\n",
        "            # Print to console\n",
        "            print(srt_block)\n",
        "\n",
        "def convert_to_srt_time(seconds):\n",
        "    # Convert seconds to hours, minutes, seconds, and milliseconds\n",
        "    hours = int(seconds // 3600)\n",
        "    minutes = int((seconds % 3600) // 60)\n",
        "    seconds = int(seconds % 60)\n",
        "    milliseconds = int((seconds % 1) * 1000)\n",
        "    return f\"{hours:02}:{minutes:02}:{seconds:02},{milliseconds:03}\"\n",
        "\n",
        "#@title Ganti URL audio di bawah ini sesuai kebutuhan\n",
        "audio_path = \"https://server16.mp3quran.net/deban/Rewayat-Hafs-A-n-Assem/072.mp3\"  #@param {type:\"string\"}\n",
        "srt_path = \"output_subtitles.srt\"\n",
        "transcribe_audio_to_srt(audio_path, srt_path)"
      ],
      "metadata": {
        "id": "TaCQzt3rcjMG",
        "outputId": "5dcc72ff-8e7b-48ef-a5c4-5e1d13dcaa7e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "00:00:00,000 --> 00:00:03,000\n",
            "بسم الله الرحمن الرحيم\n",
            "\n",
            "\n",
            "2\n",
            "00:00:03,000 --> 00:00:17,000\n",
            "قل أوحي إلي أنه استمع نفر من الجن فقالوا إنا سمعنا قرآنا عجبا\n",
            "\n",
            "\n",
            "3\n",
            "00:00:17,000 --> 00:00:28,000\n",
            "يهدي إلى الرشد فآمنا به ولن نشرك بربنا أحدا\n",
            "\n",
            "\n",
            "4\n",
            "00:00:28,000 --> 00:00:38,000\n",
            "وأنه تعالى جد ربنا ما اتخذ صاحبة ولا ولدا\n",
            "\n",
            "\n",
            "5\n",
            "00:00:38,000 --> 00:00:46,000\n",
            "وأنه كان يقول سفيهنا على الله شططا\n",
            "\n",
            "\n",
            "6\n",
            "00:00:46,000 --> 00:00:58,000\n",
            "وأننا ظننا أن لن تقول الإنس والجن على الله كذبا\n",
            "\n",
            "\n",
            "7\n",
            "00:00:58,000 --> 00:01:12,000\n",
            "وأنه كان رجال من الإنس يعوذون برجال من الجن فزادوهم رهقا\n",
            "\n",
            "\n",
            "8\n",
            "00:01:12,000 --> 00:01:23,000\n",
            "وأنهم ظنوا كما ظننتم أن لن يبعث الله أحدا\n",
            "\n",
            "\n",
            "9\n",
            "00:01:23,000 --> 00:01:35,000\n",
            "وأننا لمسنا السماء فوجدناها ملئة حرسا شديدا وشهبا\n",
            "\n",
            "\n",
            "10\n",
            "00:01:35,000 --> 00:01:50,000\n",
            "وأننا كنا نقعد منها مقاعد للسمع فمن يستمع الآن يجد له شهابا رصدا\n",
            "\n",
            "\n",
            "11\n",
            "00:01:50,000 --> 00:02:03,000\n",
            "وأننا لا ندري أشرء أريد بمن في الأرض أم أراد بهم ربهم رشدا\n",
            "\n",
            "\n",
            "12\n",
            "00:02:03,000 --> 00:02:16,000\n",
            "وأننا منا الصالحون ومنا دون ذلك كنا طرائق قددا\n",
            "\n",
            "\n",
            "13\n",
            "00:02:16,000 --> 00:02:28,000\n",
            "وأننا ظننا أن لن نعجز الله في الأرض ولن نعجزه هربا\n",
            "\n",
            "\n",
            "14\n",
            "00:02:28,000 --> 00:02:51,000\n",
            "وأننا لما سمعنا الهدى آمنا به فمن يؤمن بربه فلا يخاف بخسا ولا رهقا\n",
            "\n",
            "\n",
            "15\n",
            "00:02:51,000 --> 00:03:05,000\n",
            "وأننا منا المسلمون ومنا القاسطون فمن أسلم فأولئك تحروا رشدا\n",
            "\n",
            "\n",
            "16\n",
            "00:03:06,000 --> 00:03:14,000\n",
            "وأنما القاسطون فكانوا لجهنم حطبا\n",
            "\n",
            "\n",
            "17\n",
            "00:03:14,000 --> 00:03:26,000\n",
            "وأن لو استقاموا على الطريقة لأسقيناهم ماء غدقا لنفتنهم فيه\n",
            "\n",
            "\n",
            "18\n",
            "00:03:26,000 --> 00:03:36,000\n",
            "ومن يعرض عن ذكر ربه يسلك عذابا صعدا\n",
            "\n",
            "\n",
            "19\n",
            "00:03:36,000 --> 00:03:45,000\n",
            "وأن المساجد لله فلا تدعوا مع الله أحدا\n",
            "\n",
            "\n",
            "20\n",
            "00:03:45,000 --> 00:03:56,000\n",
            "وأنه لما قام عبد الله يدعوه كادوا يكونون عليه لبدا\n",
            "\n",
            "\n",
            "21\n",
            "00:03:56,000 --> 00:04:04,000\n",
            "قل إنما أدعو ربي ولا أشرك به أحدا\n",
            "\n",
            "\n",
            "22\n",
            "00:04:04,000 --> 00:04:11,000\n",
            "قل إني لا أملك لكم ضرا ولا رشدا\n",
            "\n",
            "\n",
            "23\n",
            "00:04:11,000 --> 00:04:18,000\n",
            "قل إني لن يجيرني من الله أحدا\n",
            "\n",
            "\n",
            "24\n",
            "00:04:18,000 --> 00:04:23,000\n",
            "ولن أجد من دوني ملتحدا\n",
            "\n",
            "\n",
            "25\n",
            "00:04:23,000 --> 00:04:29,000\n",
            "إلا بلاغا من الله ورسالاته\n",
            "\n",
            "\n",
            "26\n",
            "00:04:29,000 --> 00:04:38,000\n",
            "ومن يعص الله ورسوله فإن له نار جهنم\n",
            "\n",
            "\n",
            "27\n",
            "00:04:38,000 --> 00:04:42,000\n",
            "خالدين فيها أبدا\n",
            "\n",
            "\n",
            "28\n",
            "00:04:42,000 --> 00:04:54,000\n",
            "حتى إذا رأوا ما يُعَدون فسيعلمون من أضعف ناصرا وأقل عددا\n",
            "\n",
            "\n",
            "29\n",
            "00:04:54,000 --> 00:05:04,000\n",
            "قل إن أدري أقريب ما تُعَدون أم يجعل له ربي أمدا\n",
            "\n",
            "\n",
            "30\n",
            "00:05:04,000 --> 00:05:11,000\n",
            "عالم الغيب فلا يظهر على غيبه أحدا\n",
            "\n",
            "\n",
            "31\n",
            "00:05:11,000 --> 00:05:25,000\n",
            "إلا من ارتضى من رسول فإنه يسلك من بين يديه ومن خلفه رصدا\n",
            "\n",
            "\n",
            "32\n",
            "00:05:25,000 --> 00:05:32,000\n",
            "يعلم أن قد أبلغوا رسالات ربهم\n",
            "\n",
            "\n",
            "33\n",
            "00:05:32,000 --> 00:05:42,000\n",
            "وأحاط بما لديهم وأحصى كل شيء عددا\n",
            "\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 3. MENGHITUNG JUMLAH KATA DAN INFORMASI SURAT QURAN { display-mode: \"form\" }\n",
        "#@markdown Klik untuk memproses\n",
        "\n",
        "import re\n",
        "import pandas as pd\n",
        "from IPython.display import display, Javascript\n",
        "import ipywidgets as widgets\n",
        "\n",
        "# Fungsi untuk memparsing file SRT\n",
        "def parse_srt(filename):\n",
        "    with open(filename, 'r', encoding='utf-8') as file:\n",
        "        content = file.read()\n",
        "    # Split by double newlines to separate each subtitle block\n",
        "    blocks = content.split('\\n\\n')\n",
        "    subtitles = []\n",
        "    for block in blocks:\n",
        "        lines = block.split('\\n')\n",
        "        if len(lines) >= 3:\n",
        "            # The subtitle timing is in the second line, and the text is in the following lines\n",
        "            text = ' '.join(lines[2:])\n",
        "            # Remove any HTML tags or special characters\n",
        "            text = re.sub(r'<.*?>', '', text)\n",
        "            # Remove non-alphanumeric characters except spaces\n",
        "            text = re.sub(r'[^\\w\\s]', '', text)\n",
        "            subtitles.append(text)\n",
        "    return subtitles\n",
        "\n",
        "# Fungsi untuk menghitung jumlah kata\n",
        "def count_words(text):\n",
        "    # Split the text into words\n",
        "    words = text.split()\n",
        "    return len(words)\n",
        "\n",
        "# Fungsi untuk menghitung jumlah kata dari setiap subtitle\n",
        "def calculate_word_counts(subtitles):\n",
        "    word_counts = []\n",
        "    for text in subtitles:\n",
        "        word_count = count_words(text)\n",
        "        word_counts.append(word_count)\n",
        "    return word_counts\n",
        "\n",
        "# Fungsi untuk membuat tombol copy\n",
        "def create_copy_button(text):\n",
        "    button = widgets.Button(description=\"Klik copy\")\n",
        "    output = widgets.Output()\n",
        "\n",
        "    def on_button_click(b):\n",
        "        with output:\n",
        "            display(Javascript(\"\"\"\n",
        "            navigator.clipboard.writeText(`{}`);\n",
        "            \"\"\".format(text)))\n",
        "            print(\"Copied to clipboard! Silahkan paste ke kotak input Splits\")\n",
        "\n",
        "    button.on_click(on_button_click)\n",
        "    display(button, output)\n",
        "\n",
        "# Data nomor, nama surat, dan jumlah ayat dalam Al-Quran\n",
        "data = {\n",
        "    \"Nomor\": list(range(1, 115)),\n",
        "    \"Nama Surat\": [\n",
        "        \"Al-Fatihah\", \"Al-Baqarah\", \"Ali 'Imran\", \"An-Nisa'\", \"Al-Ma'idah\", \"Al-An'am\",\n",
        "        \"Al-A'raf\", \"Al-Anfal\", \"At-Taubah\", \"Yunus\", \"Hud\", \"Yusuf\", \"Ar-Ra'd\",\n",
        "        \"Ibrahim\", \"Al-Hijr\", \"An-Nahl\", \"Al-Isra'\", \"Al-Kahf\", \"Maryam\", \"Ta-Ha\",\n",
        "        \"Al-Anbiya'\", \"Al-Hajj\", \"Al-Mu'minun\", \"An-Nur\", \"Al-Furqan\", \"Ash-Shu'ara'\",\n",
        "        \"An-Naml\", \"Al-Qasas\", \"Al-Ankabut\", \"Ar-Rum\", \"Luqman\", \"As-Sajdah\", \"Al-Ahzab\",\n",
        "        \"Saba'\", \"Fatir\", \"Ya-Sin\", \"As-Saffat\", \"Sad\", \"Az-Zumar\", \"Ghafir\", \"Fussilat\",\n",
        "        \"Ash-Shura\", \"Az-Zukhruf\", \"Ad-Dukhan\", \"Al-Jathiyah\", \"Al-Ahqaf\", \"Muhammad\",\n",
        "        \"Al-Fath\", \"Al-Hujurat\", \"Qaf\", \"Adh-Dhariyat\", \"At-Tur\", \"An-Najm\", \"Al-Qamar\",\n",
        "        \"Ar-Rahman\", \"Al-Waqi'ah\", \"Al-Hadid\", \"Al-Mujadila\", \"Al-Hashr\", \"Al-Mumtahina\",\n",
        "        \"As-Saff\", \"Al-Jumu'ah\", \"Al-Munafiqun\", \"At-Taghabun\", \"At-Talaq\", \"At-Tahrim\",\n",
        "        \"Al-Mulk\", \"Al-Qalam\", \"Al-Haqqah\", \"Al-Ma'arij\", \"Nuh\", \"Al-Jinn\", \"Al-Muzzammil\",\n",
        "        \"Al-Muddathir\", \"Al-Qiyamah\", \"Al-Insan\", \"Al-Mursalat\", \"An-Naba'\", \"An-Nazi'at\",\n",
        "        \"Abasa\", \"At-Takwir\", \"Al-Infitar\", \"Al-Mutaffifin\", \"Al-Inshiqaq\", \"Al-Buruj\",\n",
        "        \"At-Tariq\", \"Al-A'la\", \"Al-Ghashiyah\", \"Al-Fajr\", \"Al-Balad\", \"Ash-Shams\",\n",
        "        \"Al-Layl\", \"Ad-Duha\", \"Ash-Sharh\", \"At-Tin\", \"Al-Alaq\", \"Al-Qadr\", \"Al-Bayyina\",\n",
        "        \"Az-Zalzalah\", \"Al-Adiyat\", \"Al-Qari'a\", \"At-Takathur\", \"Al-Asr\", \"Al-Humazah\",\n",
        "        \"Al-Fil\", \"Quraish\", \"Al-Ma'un\", \"Al-Kawthar\", \"Al-Kafirun\", \"An-Nasr\",\n",
        "        \"Al-Masad\", \"Al-Ikhlas\", \"Al-Falaq\", \"An-Nas\"\n",
        "    ],\n",
        "    \"Jumlah Ayat\": [\n",
        "        7, 286, 200, 176, 120, 165, 206, 75, 129, 109, 123, 111, 43, 52, 99, 128,\n",
        "        111, 110, 98, 135, 112, 78, 118, 64, 77, 227, 93, 88, 69, 60, 34, 30, 73,\n",
        "        54, 45, 83, 182, 88, 75, 85, 54, 53, 89, 59, 37, 35, 38, 29, 18, 45, 60,\n",
        "        49, 62, 55, 78, 96, 29, 22, 24, 13, 14, 11, 11, 18, 12, 12, 30, 52, 52, 44,\n",
        "        28, 28, 20, 56, 40, 31, 50, 40, 46, 42, 29, 19, 36, 25, 22, 17, 19, 26, 30,\n",
        "        20, 15, 21, 11, 8, 8, 19, 5, 8, 8, 11, 11, 8, 3, 9, 5, 4, 7, 3, 6, 3, 5, 4,\n",
        "        5, 6\n",
        "    ]\n",
        "}\n",
        "\n",
        "# Membuat DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Membuat dropdown\n",
        "dropdown = widgets.Dropdown(\n",
        "    options=[(f\"{row['Nomor']}. {row['Nama Surat']} ({row['Jumlah Ayat']} ayat)\", row['Nama Surat']) for idx, row in df.iterrows()],\n",
        "    description='Surat:'\n",
        ")\n",
        "\n",
        "# Fungsi untuk menampilkan informasi surat\n",
        "def show_surat_info(change):\n",
        "    surat = change['new']\n",
        "    info = df[df['Nama Surat'] == surat].iloc[0]\n",
        "    display(f\"Nomor: {info['Nomor']}, Nama Surat: {info['Nama Surat']}, Jumlah Ayat: {info['Jumlah Ayat']}\")\n",
        "\n",
        "# Menambahkan observer untuk dropdown\n",
        "dropdown.observe(show_surat_info, names='value')\n",
        "\n",
        "# Menampilkan dropdown\n",
        "display(dropdown)\n",
        "\n",
        "#@title Contoh penggunaan\n",
        "#@markdown\n",
        "\n",
        "filename = '/content/output_subtitles.srt'\n",
        "subtitles = parse_srt(filename)\n",
        "word_counts = calculate_word_counts(subtitles)\n",
        "\n",
        "# Menampilkan hasil word_counts\n",
        "print(word_counts)\n",
        "\n",
        "# Membuat tombol copy untuk hasil word_counts tanpa tanda \"[]\"\n",
        "word_counts_str = ', '.join(map(str, word_counts))\n",
        "create_copy_button(word_counts_str)"
      ],
      "metadata": {
        "id": "AzzE6KL-l7hA",
        "outputId": "28ffd56d-5e8e-4681-bb64-204a17f30f89",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 153,
          "referenced_widgets": [
            "f2addf07981246caaca189d57c32c11d",
            "00ccd24811b94110a68153c71ee2483c",
            "fe153a544d674eda831afb4e68cd6bcc",
            "9c779c45a3884bfcb6e94f29cff08a52",
            "3dd30600874e4a2e848011de024c2ed9",
            "79c3bcc8ae2f4e989508b2326015f736",
            "db59ecac3a5e4b00b3db4d1a9dc49bdf",
            "d0b9ea1dc76b4828bb884f6d2d8e7af4"
          ]
        }
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Dropdown(description='Surat:', options=(('1. Al-Fatihah (7 ayat)', 'Al-Fatihah'), ('2. Al-Baqarah (286 ayat)',…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "f2addf07981246caaca189d57c32c11d"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[4, 13, 9, 9, 7, 10, 11, 9, 8, 13, 13, 9, 11, 14, 10, 5, 10, 8, 8, 10, 8, 8, 7, 5, 5, 8, 3, 11, 11, 7, 13, 6, 7]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='Klik copy', style=ButtonStyle())"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "9c779c45a3884bfcb6e94f29cff08a52"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Output()"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "db59ecac3a5e4b00b3db4d1a9dc49bdf"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#@title 4. MENGELUARKAN AYAT QURAN RASM UTSMANI { display-mode: \"form\" }\n",
        "#@markdown Isi parameter surah, ayat dan split kemudian klik proses.\n",
        "\n",
        "import requests\n",
        "import ipywidgets as widgets\n",
        "from IPython.display import display, HTML\n",
        "\n",
        "def get_quran_ayats(surah_number, from_ayat, to_ayat, splits):\n",
        "    combined_text = \"بِسۡمِ ٱللَّهِ ٱلرَّحۡمَـٰنِ ٱلرَّحِیمِ\"\n",
        "    arabic_numerals = [\"٠\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"]\n",
        "\n",
        "    def convert_to_arabic_number(num):\n",
        "        reversed_num = str(num)[::-1]  # Membalik urutan angka\n",
        "        return ''.join(arabic_numerals[int(digit)] for digit in reversed_num)\n",
        "\n",
        "    def split_text(text, splits):\n",
        "        words = text.split()\n",
        "        result = []\n",
        "        index = 0\n",
        "        for count in splits:\n",
        "            segment = ' '.join(words[index:index + count])\n",
        "            result.append(segment)\n",
        "            index += count\n",
        "        return '\\n\\n'.join(result)  # Menggunakan dua enter untuk jarak antar segmen\n",
        "\n",
        "    for ayat_number in range(from_ayat, to_ayat + 1):\n",
        "        url = f\"https://api.quran.com/api/v4/quran/verses/uthmani?verse_key={surah_number}:{ayat_number}\"\n",
        "        response = requests.get(url)\n",
        "        if response.status_code == 200:\n",
        "            data = response.json()\n",
        "            ayat_text = data['verses'][0]['text_uthmani']\n",
        "            ayat_text = ayat_text.replace(\"ْ\", \"ۡ\")\n",
        "            ayat_text = ayat_text.replace(\"أُو۟\", \"أُوْ\")\n",
        "            ayat_text = ayat_text.replace(\"ا۟\", \"اْ\")\n",
        "            ayat_text = ayat_text.replace(\"لَـَٔا\", \"لَأٓ\")\n",
        "            ayat_text = ayat_text.replace(\"لۡـَٔا\", \"لۡأٓ\")\n",
        "            ayat_text = ayat_text.replace(\"لِيَسُـۥٓـُٔ\", \"لِيَسُـُٔ\")\n",
        "            ayat_text = ayat_text.replace(\"۞\", \"\")  # Hapus tanda ۞\n",
        "            ayat_text += convert_to_arabic_number(ayat_number)\n",
        "            combined_text += \" \" + ayat_text\n",
        "\n",
        "    # Menggabungkan kata yang diakhiri dengan \"ۖ\", \"ۚ\", \"ۗ\", \"ۛ\", \"ۙ\", \"ۘ\", \"ۜ\", dan \"۩\" dengan kata sebelumnya\n",
        "    combined_text = combined_text.replace(\" ۖ\", \"ۖ\").replace(\" ۚ\", \"ۚ\").replace(\" ۗ\", \"ۗ\").replace(\" ۛ\", \"ۛ\").replace(\" ۙ\", \"ۙ\").replace(\" ۘ\", \"ۘ\").replace(\" ۜ\", \"ۜ\").replace(\" ۩\", \"۩\")\n",
        "\n",
        "    combined_text = combined_text.strip()\n",
        "    result_text = split_text(combined_text, splits)\n",
        "\n",
        "    return result_text\n",
        "\n",
        "def replace_srt_text(srt_file_path, new_text):\n",
        "    with open(srt_file_path, 'r', encoding='utf-8') as file:\n",
        "        lines = file.readlines()\n",
        "\n",
        "    new_lines = []\n",
        "    text_index = 0\n",
        "    text_parts = new_text.split('\\n\\n')\n",
        "\n",
        "    for line in lines:\n",
        "        if line.strip().isdigit():\n",
        "            new_lines.append(line)\n",
        "        elif '-->' in line:\n",
        "            new_lines.append(line)\n",
        "            if text_index < len(text_parts):\n",
        "                new_lines.append(text_parts[text_index] + '\\n\\n')\n",
        "                text_index += 1\n",
        "        else:\n",
        "            continue\n",
        "\n",
        "    output_srt_file = 'output_ayat.srt'\n",
        "    with open(output_srt_file, 'w', encoding='utf-8') as file:\n",
        "        file.writelines(new_lines)\n",
        "\n",
        "    return ''.join(new_lines)\n",
        "\n",
        "#@title Contoh penggunaan\n",
        "#@markdown\n",
        "\n",
        "#@markdown ### Parameter Surah dan Ayat\n",
        "surah_number = 72  #@param {type:\"number\"}\n",
        "from_ayat = 1  #@param {type:\"number\"}\n",
        "to_ayat = 28  #@param {type:\"number\"}\n",
        "\n",
        "#@markdown ### Splits\n",
        "splits = \"4, 10, 9, 9, 7, 10, 11, 9, 8, 13, 13, 9, 11, 14, 10, 5, 7, 7, 8, 10, 8, 8, 7, 5, 5, 8, 3, 11, 11, 7, 13, 6, 6\"  #@param {type:\"string\"}\n",
        "splits = [int(x.strip()) for x in splits.split(',')]\n",
        "\n",
        "ayat_texts = get_quran_ayats(surah_number, from_ayat, to_ayat, splits)\n",
        "\n",
        "# Gantikan teks dalam file SRT\n",
        "srt_file_path = '/content/output_subtitles.srt'\n",
        "new_srt_content = replace_srt_text(srt_file_path, ayat_texts)\n",
        "\n",
        "# Tambahkan tombol Copy dan notifikasi\n",
        "def on_copy_button_clicked(b):\n",
        "    js = f\"navigator.clipboard.writeText(`{new_srt_content}`)\"\n",
        "    display(HTML(f\"<script>{js}</script>\"))\n",
        "    copy_label.value = \"Teks berhasil dicopy!\"\n",
        "\n",
        "copy_button = widgets.Button(description=\"Copy\")\n",
        "copy_button.on_click(on_copy_button_clicked)\n",
        "\n",
        "copy_label = widgets.Label(value=\"\")\n",
        "\n",
        "# Cetak hasil file SRT baru di papan layar\n",
        "print(new_srt_content)\n",
        "display(copy_button, copy_label)"
      ],
      "metadata": {
        "id": "5Z5Al3eXjePm",
        "collapsed": true,
        "outputId": "6465699c-9a63-4d03-a9e4-bd5d2378d774",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "cf8896857c2744ff94264d8df3562efc",
            "b2d276d71e964c8f9abd8549297a2d08",
            "b3ea380ed45a491697c5fa895c005ffd",
            "a83b778e1855429d9f38292bd0f82eb1",
            "6cf5db5034054cb3bf51c960197f564c",
            "e4aaa514fc144a98a32fa3395cc394d2"
          ]
        }
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "00:00:00,000 --> 00:00:03,000\n",
            "بِسۡمِ ٱللَّهِ ٱلرَّحۡمَـٰنِ ٱلرَّحِیمِ\n",
            "\n",
            "2\n",
            "00:00:03,000 --> 00:00:17,000\n",
            "قُلۡ أُوحِىَ إِلَىَّ أَنَّهُ ٱسۡتَمَعَ نَفَرٌ مِّنَ ٱلۡجِنِّ فَقَالُوٓاْ إِنَّا\n",
            "\n",
            "3\n",
            "00:00:17,000 --> 00:00:28,000\n",
            "سَمِعۡنَا قُرۡءَانًا عَجَبًا١ يَهۡدِىٓ إِلَى ٱلرُّشۡدِ فَـَٔامَنَّا بِهِۦۖ وَلَن\n",
            "\n",
            "4\n",
            "00:00:28,000 --> 00:00:38,000\n",
            "نُّشۡرِكَ بِرَبِّنَآ أَحَدًا٢ وَأَنَّهُۥ تَعَـٰلَىٰ جَدُّ رَبِّنَا مَا ٱتَّخَذَ\n",
            "\n",
            "5\n",
            "00:00:38,000 --> 00:00:46,000\n",
            "صَـٰحِبَةً وَلَا وَلَدًا٣ وَأَنَّهُۥ كَانَ يَقُولُ سَفِيهُنَا\n",
            "\n",
            "6\n",
            "00:00:46,000 --> 00:00:58,000\n",
            "عَلَى ٱللَّهِ شَطَطًا٤ وَأَنَّا ظَنَنَّآ أَن لَّن تَقُولَ ٱلۡإِنسُ وَٱلۡجِنُّ\n",
            "\n",
            "7\n",
            "00:00:58,000 --> 00:01:12,000\n",
            "عَلَى ٱللَّهِ كَذِبًا٥ وَأَنَّهُۥ كَانَ رِجَالٌ مِّنَ ٱلۡإِنسِ يَعُوذُونَ بِرِجَالٍ مِّنَ\n",
            "\n",
            "8\n",
            "00:01:12,000 --> 00:01:23,000\n",
            "ٱلۡجِنِّ فَزَادُوهُمۡ رَهَقًا٦ وَأَنَّهُمۡ ظَنُّواْ كَمَا ظَنَنتُمۡ أَن لَّن\n",
            "\n",
            "9\n",
            "00:01:23,000 --> 00:01:35,000\n",
            "يَبۡعَثَ ٱللَّهُ أَحَدًا٧ وَأَنَّا لَمَسۡنَا ٱلسَّمَآءَ فَوَجَدۡنَـٰهَا مُلِئَتۡ\n",
            "\n",
            "10\n",
            "00:01:35,000 --> 00:01:50,000\n",
            "حَرَسًا شَدِيدًا وَشُهُبًا٨ وَأَنَّا كُنَّا نَقۡعُدُ مِنۡهَا مَقَـٰعِدَ لِلسَّمۡعِۖ فَمَن يَسۡتَمِعِ ٱلۡأٓنَ يَجِدۡ\n",
            "\n",
            "11\n",
            "00:01:50,000 --> 00:02:03,000\n",
            "لَهُۥ شِهَابًا رَّصَدًا٩ وَأَنَّا لَا نَدۡرِىٓ أَشَرٌّ أُرِيدَ بِمَن فِى ٱلۡأَرۡضِ أَمۡ أَرَادَ\n",
            "\n",
            "12\n",
            "00:02:03,000 --> 00:02:16,000\n",
            "بِهِمۡ رَبُّهُمۡ رَشَدًا٠١ وَأَنَّا مِنَّا ٱلصَّـٰلِحُونَ وَمِنَّا دُونَ ذَٰلِكَۖ\n",
            "\n",
            "13\n",
            "00:02:16,000 --> 00:02:28,000\n",
            "كُنَّا طَرَآئِقَ قِدَدًا١١ وَأَنَّا ظَنَنَّآ أَن لَّن نُّعۡجِزَ ٱللَّهَ فِى ٱلۡأَرۡضِ\n",
            "\n",
            "14\n",
            "00:02:28,000 --> 00:02:51,000\n",
            "وَلَن نُّعۡجِزَهُۥ هَرَبًا٢١ وَأَنَّا لَمَّا سَمِعۡنَا ٱلۡهُدَىٰٓ ءَامَنَّا بِهِۦۖ فَمَن يُؤۡمِنۢ بِرَبِّهِۦ فَلَا يَخَافُ\n",
            "\n",
            "15\n",
            "00:02:51,000 --> 00:03:05,000\n",
            "بَخۡسًا وَلَا رَهَقًا٣١ وَأَنَّا مِنَّا ٱلۡمُسۡلِمُونَ وَمِنَّا ٱلۡقَـٰسِطُونَۖ فَمَنۡ أَسۡلَمَ\n",
            "\n",
            "16\n",
            "00:03:06,000 --> 00:03:14,000\n",
            "فَأُوْلَـٰٓئِكَ تَحَرَّوۡاْ رَشَدًا٤١ وَأَمَّا ٱلۡقَـٰسِطُونَ\n",
            "\n",
            "17\n",
            "00:03:14,000 --> 00:03:26,000\n",
            "فَكَانُواْ لِجَهَنَّمَ حَطَبًا٥١ وَأَلَّوِ ٱسۡتَقَـٰمُواْ عَلَى ٱلطَّرِيقَةِ\n",
            "\n",
            "18\n",
            "00:03:26,000 --> 00:03:36,000\n",
            "لَأَسۡقَيۡنَـٰهُم مَّآءً غَدَقًا٦١ لِّنَفۡتِنَهُمۡ فِيهِۚ وَمَن يُعۡرِضۡ\n",
            "\n",
            "19\n",
            "00:03:36,000 --> 00:03:45,000\n",
            "عَن ذِكۡرِ رَبِّهِۦ يَسۡلُكۡهُ عَذَابًا صَعَدًا٧١ وَأَنَّ ٱلۡمَسَـٰجِدَ\n",
            "\n",
            "20\n",
            "00:03:45,000 --> 00:03:56,000\n",
            "لِلَّهِ فَلَا تَدۡعُواْ مَعَ ٱللَّهِ أَحَدًا٨١ وَأَنَّهُۥ لَمَّا قَامَ عَبۡدُ\n",
            "\n",
            "21\n",
            "00:03:56,000 --> 00:04:04,000\n",
            "ٱللَّهِ يَدۡعُوهُ كَادُواْ يَكُونُونَ عَلَيۡهِ لِبَدًا٩١ قُلۡ إِنَّمَآ\n",
            "\n",
            "22\n",
            "00:04:04,000 --> 00:04:11,000\n",
            "أَدۡعُواْ رَبِّى وَلَآ أُشۡرِكُ بِهِۦٓ أَحَدًا٠٢ قُلۡ إِنِّى\n",
            "\n",
            "23\n",
            "00:04:11,000 --> 00:04:18,000\n",
            "لَآ أَمۡلِكُ لَكُمۡ ضَرًّا وَلَا رَشَدًا١٢ قُلۡ\n",
            "\n",
            "24\n",
            "00:04:18,000 --> 00:04:23,000\n",
            "إِنِّى لَن يُجِيرَنِى مِنَ ٱللَّهِ\n",
            "\n",
            "25\n",
            "00:04:23,000 --> 00:04:29,000\n",
            "أَحَدٌ وَلَنۡ أَجِدَ مِن دُونِهِۦ\n",
            "\n",
            "26\n",
            "00:04:29,000 --> 00:04:38,000\n",
            "مُلۡتَحَدًا٢٢ إِلَّا بَلَـٰغًا مِّنَ ٱللَّهِ وَرِسَـٰلَـٰتِهِۦۚ وَمَن يَعۡصِ\n",
            "\n",
            "27\n",
            "00:04:38,000 --> 00:04:42,000\n",
            "ٱللَّهَ وَرَسُولَهُۥ فَإِنَّ\n",
            "\n",
            "28\n",
            "00:04:42,000 --> 00:04:54,000\n",
            "لَهُۥ نَارَ جَهَنَّمَ خَـٰلِدِينَ فِيهَآ أَبَدًا٣٢ حَتَّىٰٓ إِذَا رَأَوۡاْ مَا يُوعَدُونَ\n",
            "\n",
            "29\n",
            "00:04:54,000 --> 00:05:04,000\n",
            "فَسَيَعۡلَمُونَ مَنۡ أَضۡعَفُ نَاصِرًا وَأَقَلُّ عَدَدًا٤٢ قُلۡ إِنۡ أَدۡرِىٓ أَقَرِيبٌ مَّا\n",
            "\n",
            "30\n",
            "00:05:04,000 --> 00:05:11,000\n",
            "تُوعَدُونَ أَمۡ يَجۡعَلُ لَهُۥ رَبِّىٓ أَمَدًا٥٢ عَـٰلِمُ\n",
            "\n",
            "31\n",
            "00:05:11,000 --> 00:05:25,000\n",
            "ٱلۡغَيۡبِ فَلَا يُظۡهِرُ عَلَىٰ غَيۡبِهِۦٓ أَحَدًا٦٢ إِلَّا مَنِ ٱرۡتَضَىٰ مِن رَّسُولٍ فَإِنَّهُۥ يَسۡلُكُ\n",
            "\n",
            "32\n",
            "00:05:25,000 --> 00:05:32,000\n",
            "مِنۢ بَيۡنِ يَدَيۡهِ وَمِنۡ خَلۡفِهِۦ رَصَدًا٧٢\n",
            "\n",
            "33\n",
            "00:05:32,000 --> 00:05:42,000\n",
            "لِّيَعۡلَمَ أَن قَدۡ أَبۡلَغُواْ رِسَـٰلَـٰتِ رَبِّهِمۡ\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='Copy', style=ButtonStyle())"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "cf8896857c2744ff94264d8df3562efc"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Label(value='')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "a83b778e1855429d9f38292bd0f82eb1"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import re\n",
        "from IPython.display import display, HTML\n",
        "import requests\n",
        "import ipywidgets as widgets\n",
        "\n",
        "# Bagian pertama kode\n",
        "def find_and_update_first_subtitle(file_path, additional_file_path):\n",
        "    arabic_digits_pattern = re.compile(r'[\\u0660-\\u0669]')\n",
        "\n",
        "    def read_srt(file_path):\n",
        "        with open(file_path, 'r', encoding='utf-8') as file:\n",
        "            return file.readlines()\n",
        "\n",
        "    lines = read_srt(file_path)\n",
        "    additional_lines = read_srt(additional_file_path)\n",
        "\n",
        "    subtitle_number = None\n",
        "    updated_lines = []\n",
        "    word_counts = []\n",
        "    line_texts = []\n",
        "    additional_texts = []\n",
        "    updates_made = False\n",
        "    extra_words = \"\"\n",
        "\n",
        "    for i, line in enumerate(lines):\n",
        "        if line.strip().isdigit():\n",
        "            subtitle_number = line.strip()\n",
        "        if '-->' in line:\n",
        "            updated_lines.append(line.strip())\n",
        "            continue\n",
        "\n",
        "        words = line.split()\n",
        "        arabic_number_words = [word for word in words if arabic_digits_pattern.search(word)]\n",
        "\n",
        "        if len(arabic_number_words) == 1 and not updates_made:\n",
        "            word_with_arabic_number = arabic_number_words[0]\n",
        "            index = words.index(word_with_arabic_number)\n",
        "            if index != len(words) - 1:\n",
        "                # Separate the extra words\n",
        "                updated_words = words[:index + 1]\n",
        "                extra_words = ' '.join(words[index + 1:])\n",
        "\n",
        "                # Calculate new word count\n",
        "                word_counts.append(len(updated_words))\n",
        "                line_texts.append(' '.join(updated_words))\n",
        "\n",
        "                # Add the updated line\n",
        "                updated_lines.append(' '.join(updated_words))\n",
        "\n",
        "                updates_made = True\n",
        "                print(f\"Koreksi jumlah kata di baris {subtitle_number}!\")\n",
        "                print(f\"Kata: {word_with_arabic_number}\")\n",
        "                print(f\"Jumlah asli: {len(words)}, Jumlah baru: {len(updated_words)}\")\n",
        "                print(f\"Updated line: {' '.join(updated_words)}\")\n",
        "                continue\n",
        "        updated_lines.append(line.strip())\n",
        "        if line.strip() and not line.strip().isdigit() and '-->' not in line:\n",
        "            word_counts.append(len(words))\n",
        "            line_texts.append(line.strip())\n",
        "\n",
        "    # Append the remaining lines and add extra words to the next text line\n",
        "    if updates_made:\n",
        "        appended = False\n",
        "        for j in range(i + 1, len(lines)):\n",
        "            if lines[j].strip().isdigit():\n",
        "                updated_lines.append(lines[j].strip())\n",
        "            elif '-->' in lines[j]:\n",
        "                updated_lines.append(lines[j].strip())\n",
        "            elif lines[j].strip() and not appended:\n",
        "                # Append extra words to the next text line\n",
        "                combined_line = lines[j].strip() + ' ' + extra_words\n",
        "                updated_lines.append(combined_line)\n",
        "                word_counts.append(len(lines[j].split()) + len(extra_words.split()))\n",
        "                line_texts.append(combined_line)\n",
        "                appended = True\n",
        "            else:\n",
        "                updated_lines.append(lines[j].strip())\n",
        "                if lines[j].strip() and not lines[j].strip().isdigit() and '-->' not in lines[j]:\n",
        "                    word_counts.append(len(lines[j].split()))\n",
        "                    line_texts.append(lines[j].strip())\n",
        "\n",
        "    # Remove the last element if it is 0\n",
        "    if word_counts and word_counts[-1] == 0:\n",
        "        word_counts.pop()\n",
        "        line_texts.pop()\n",
        "\n",
        "    if not updates_made:\n",
        "        print(\"Koreksi selesai!\")\n",
        "    else:\n",
        "        # Write the updated lines back to the file or to a new file\n",
        "        with open('/content/output_ayat.srt', 'w', encoding='utf-8') as file:\n",
        "            for line in updated_lines:\n",
        "                file.write(line + '\\n')\n",
        "\n",
        "    # Read additional SRT lines and align them with the main SRT lines\n",
        "    additional_index = 0\n",
        "    for line in additional_lines:\n",
        "        if line.strip() and not line.strip().isdigit() and '-->' not in line:\n",
        "            additional_texts.append(line.strip())\n",
        "            additional_index += 1\n",
        "\n",
        "    # Ensure the additional_texts list is the same length as the line_texts list\n",
        "    while len(additional_texts) < len(line_texts):\n",
        "        additional_texts.append(\"\")\n",
        "\n",
        "    # Create a table with the word counts and texts from both files\n",
        "    table_rows = \"\"\n",
        "    for idx, (count, text, additional_text) in enumerate(zip(word_counts, line_texts, additional_texts), start=1):\n",
        "        table_rows += f\"<tr><td>{idx}</td><td contenteditable='true'>{count}</td><td contenteditable='true'>{text}</td><td contenteditable='true'>{additional_text}</td></tr>\"\n",
        "\n",
        "    display(HTML(f\"\"\"\n",
        "        <p>Urutan kata SRT terupdate:</p>\n",
        "        <table border=\"1\" style=\"width:100%; border-collapse: collapse;\" id=\"editable_table\">\n",
        "            <thead>\n",
        "                <tr><th>No</th><th>Word Count</th><th>Main Text</th><th>Original Subtitles</th></tr>\n",
        "            </thead>\n",
        "            <tbody>\n",
        "                {table_rows}\n",
        "            </tbody>\n",
        "        </table>\n",
        "        <button onclick=\"copyToClipboard()\">Copy</button>\n",
        "        <p id=\"copy_status\"></p>\n",
        "        <script>\n",
        "        // Save changes to localStorage\n",
        "        function saveTableToLocalStorage() {{\n",
        "            var table = document.getElementById('editable_table');\n",
        "            var rows = Array.from(table.rows).slice(1); // skip header row\n",
        "            var tableData = rows.map(row => {{\n",
        "                return {{\n",
        "                    no: row.cells[0].innerText,\n",
        "                    wordCount: row.cells[1].innerText,\n",
        "                    mainText: row.cells[2].innerText,\n",
        "                    originalText: row.cells[3].innerText\n",
        "                }};\n",
        "            }});\n",
        "            localStorage.setItem('tableData', JSON.stringify(tableData));\n",
        "        }}\n",
        "\n",
        "        // Load changes from localStorage\n",
        "        function loadTableFromLocalStorage() {{\n",
        "            var tableData = JSON.parse(localStorage.getItem('tableData') || '[]');\n",
        "            var table = document.getElementById('editable_table').getElementsByTagName('tbody')[0];\n",
        "            tableData.forEach(data => {{\n",
        "                var row = table.insertRow();\n",
        "                row.insertCell(0).innerText = data.no;\n",
        "                row.insertCell(1).innerText = data.wordCount;\n",
        "                row.insertCell(2).innerText = data.mainText;\n",
        "                row.insertCell(3).innerText = data.originalText;\n",
        "            }});\n",
        "        }}\n",
        "\n",
        "        // Copy to clipboard\n",
        "        function copyToClipboard() {{\n",
        "            saveTableToLocalStorage();\n",
        "            var tableData = JSON.parse(localStorage.getItem('tableData') || '[]');\n",
        "            var text = tableData.map(data => data.wordCount).join(', ');\n",
        "            navigator.clipboard.writeText(text).then(function() {{\n",
        "                var copyStatus = document.getElementById(\"copy_status\");\n",
        "                copyStatus.innerText = \"Copied to clipboard! Silahkan paste ke inputan Splits\";\n",
        "            }});\n",
        "        }}\n",
        "\n",
        "        document.addEventListener('DOMContentLoaded', loadTableFromLocalStorage);\n",
        "        document.getElementById('editable_table').addEventListener('input', saveTableToLocalStorage);\n",
        "        </script>\n",
        "    \"\"\"))\n",
        "\n",
        "    return\n",
        "\n",
        "# Paths to your SRT files\n",
        "srt_file_path = '/content/output_ayat.srt'\n",
        "additional_srt_file_path = '/content/output_subtitles.srt'\n",
        "find_and_update_first_subtitle(srt_file_path, additional_srt_file_path)\n",
        "\n",
        "# Input widgets untuk bagian kedua\n",
        "surah_number_input = widgets.IntText(description='Surah Number:', value=72)\n",
        "from_ayat_input = widgets.IntText(description='From Ayat:', value=1)\n",
        "to_ayat_input = widgets.IntText(description='To Ayat:', value=28)\n",
        "splits_input = widgets.Text(description='Splits:', value='4, 10, 9, 9, 7, 10, 11, 9, 8, 13, 13, 9, 11, 14, 10, 5, 7, 7, 8, 10, 8, 8, 7, 5, 5, 8, 3, 11, 11, 7, 13, 6, 6')\n",
        "\n",
        "def run_kode_kedua(surah_number, from_ayat, to_ayat, splits):\n",
        "    splits = [int(x.strip()) for x in splits.split(',')]\n",
        "    ayat_texts = get_quran_ayats(surah_number, from_ayat, to_ayat, splits)\n",
        "\n",
        "    # Gantikan teks dalam file SRT\n",
        "    srt_file_path = '/content/output_subtitles.srt'\n",
        "    new_srt_content = replace_srt_text(srt_file_path, ayat_texts)\n",
        "\n",
        "    # Tambahkan tombol Copy dan notifikasi\n",
        "    def on_copy_button_clicked(b):\n",
        "        js = f\"navigator.clipboard.writeText(`{new_srt_content}`)\"\n",
        "        display(HTML(f\"<script>{js}</script>\"))\n",
        "        copy_label.value = \"Teks berhasil dicopy!\"\n",
        "\n",
        "    copy_button = widgets.Button(description=\"Copy\")\n",
        "    copy_button.on_click(on_copy_button_clicked)\n",
        "\n",
        "    copy_label = widgets.Label(value=\"\")\n",
        "\n",
        "    # Cetak hasil file SRT baru di papan layar\n",
        "    print(new_srt_content)\n",
        "    display(copy_button, copy_label)\n",
        "\n",
        "def on_confirm_button_clicked(b):\n",
        "    run_kode_kedua(surah_number_input.value, from_ayat_input.value, to_ayat_input.value, splits_input.value)\n",
        "\n",
        "confirm_button = widgets.Button(description=\"Run Kode Kedua\")\n",
        "confirm_button.on_click(on_confirm_button_clicked)\n",
        "\n",
        "display(surah_number_input, from_ayat_input, to_ayat_input, splits_input, confirm_button)\n",
        "\n",
        "# Bagian kode kedua\n",
        "def get_quran_ayats(surah_number, from_ayat, to_ayat, splits):\n",
        "    combined_text = \"بِسۡمِ ٱللَّهِ ٱلرَّحۡمَـٰنِ ٱلرَّحِیمِ\"\n",
        "    arabic_numerals = [\"٠\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"]\n",
        "\n",
        "    def convert_to_arabic_number(num):\n",
        "        reversed_num = str(num)[::-1]  # Membalik urutan angka\n",
        "        return ''.join(arabic_numerals[int(digit)] for digit in reversed_num)\n",
        "\n",
        "    def split_text(text, splits):\n",
        "        words = text.split()\n",
        "        result = []\n",
        "        index = 0\n",
        "        for count in splits:\n",
        "            segment = ' '.join(words[index:index + count])\n",
        "            result.append(segment)\n",
        "            index += count\n",
        "        return '\\n\\n'.join(result)  # Menggunakan dua enter untuk jarak antar segmen\n",
        "\n",
        "    for ayat_number in range(from_ayat, to_ayat + 1):\n",
        "        url = f\"https://api.quran.com/api/v4/quran/verses/uthmani?verse_key={surah_number}:{ayat_number}\"\n",
        "        response = requests.get(url)\n",
        "        if response.status_code == 200:\n",
        "            data = response.json()\n",
        "            ayat_text = data['verses'][0]['text_uthmani']\n",
        "            ayat_text = ayat_text.replace(\"ْ\", \"ۡ\")\n",
        "            ayat_text = ayat_text.replace(\"أُو۟\", \"أُوْ\")\n",
        "            ayat_text = ayat_text.replace(\"ا۟\", \"اْ\")\n",
        "            ayat_text = ayat_text.replace(\"لَـَٔا\", \"لَأٓ\")\n",
        "            ayat_text = ayat_text.replace(\"لۡـَٔا\", \"لۡأٓ\")\n",
        "            ayat_text = ayat_text.replace(\"لِيَسُـۥٓـُٔ\", \"لِيَسُـُٔ\")\n",
        "            ayat_text = ayat_text.replace(\"۞\", \"\")  # Hapus tanda ۞\n",
        "            ayat_text += convert_to_arabic_number(ayat_number)\n",
        "            combined_text += \" \" + ayat_text\n",
        "\n",
        "    # Menggabungkan kata yang diakhiri dengan \"ۖ\", \"ۚ\", \"ۗ\", \"ۛ\", \"ۙ\", \"ۘ\", \"ۜ\", dan \"۩\" dengan kata sebelumnya\n",
        "    combined_text = combined_text.replace(\" ۖ\", \"ۖ\").replace(\" ۚ\", \"ۚ\").replace(\" ۗ\", \"ۗ\").replace(\" ۛ\", \"ۛ\").replace(\" ۙ\", \"ۙ\").replace(\" ۘ\", \"ۘ\").replace(\" ۜ\", \"ۜ\").replace(\" ۩\", \"۩\")\n",
        "\n",
        "    combined_text = combined_text.strip()\n",
        "    result_text = split_text(combined_text, splits)\n",
        "\n",
        "    return result_text\n",
        "\n",
        "def replace_srt_text(srt_file_path, new_text):\n",
        "    with open(srt_file_path, 'r', encoding='utf-8') as file:\n",
        "        lines = file.readlines()\n",
        "\n",
        "    new_lines = []\n",
        "    text_index = 0\n",
        "    text_parts = new_text.split('\\n\\n')\n",
        "\n",
        "    for line in lines:\n",
        "        if line.strip().isdigit():\n",
        "            new_lines.append(line)\n",
        "        elif '-->' in line:\n",
        "            new_lines.append(line)\n",
        "            if text_index < len(text_parts):\n",
        "                new_lines.append(text_parts[text_index] + '\\n\\n')\n",
        "                text_index += 1\n",
        "        else:\n",
        "            continue\n",
        "\n",
        "    output_srt_file = 'output_ayat.srt'\n",
        "    with open(output_srt_file, 'w', encoding='utf-8') as file:\n",
        "        file.writelines(new_lines)\n",
        "\n",
        "    return ''.join(new_lines)"
      ],
      "metadata": {
        "id": "dnDSZm03cdn1",
        "outputId": "e2c0a6bb-ac2a-4b4e-f2eb-7f7e63b56415",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "46f5dd5bf3c941b58d6d873ba2ba3599",
            "51552ff0aa7b47e1a3792988c6248314",
            "3267ab554783400dadd535d1140bc32f",
            "f94fa04fc96b42e89f9031900ccbbd12",
            "a635395e665748798c5d7fe80619bf13",
            "4af96922826f41dbb311e465fad7394f",
            "d097eec430c142bc844b59b04f7bfc17",
            "1594f095bd1d426ba65c56d23f1fd179",
            "d60f7d2d2fd44fe5878bfea6edbcfc9a",
            "d7d65b188f6a42daa5e0d00eaaf38aff",
            "063839b9bd9848888337f8787b2e6573",
            "8c818073da1d42a798b0db2d6da69c95",
            "da4765fd2ed14754aaaee33be5081cb5",
            "98776b42fff943719b0f5a95fbaa3045",
            "a853df66ba134d96b1f43a2652dba308",
            "481c011feed0478ebab3988167e5a940",
            "046a4caf4f9b4389afd94da3eed44437",
            "7319e56b30b943ceaf8a47f81cdd683f",
            "a9a0695aa684450bbc95df670eb40389",
            "27fbeab9840f44c8a613871efd4c0859",
            "aaf12083a8204f1faf88120b4b1b5d8c"
          ]
        }
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Koreksi jumlah kata di baris 19!\n",
            "Kata: صَعَدًا٧١\n",
            "Jumlah asli: 8, Jumlah baru: 3\n",
            "Updated line: يَسۡلُكۡهُ عَذَابًا صَعَدًا٧١\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "        <p>Urutan kata SRT terupdate:</p>\n",
              "        <table border=\"1\" style=\"width:100%; border-collapse: collapse;\" id=\"editable_table\">\n",
              "            <thead>\n",
              "                <tr><th>No</th><th>Word Count</th><th>Main Text</th><th>Original Subtitles</th></tr>\n",
              "            </thead>\n",
              "            <tbody>\n",
              "                <tr><td>1</td><td contenteditable='true'>4</td><td contenteditable='true'>بِسۡمِ ٱللَّهِ ٱلرَّحۡمَـٰنِ ٱلرَّحِیمِ</td><td contenteditable='true'>بسم الله الرحمن الرحيم</td></tr><tr><td>2</td><td contenteditable='true'>13</td><td contenteditable='true'>قُلۡ أُوحِىَ إِلَىَّ أَنَّهُ ٱسۡتَمَعَ نَفَرٌ مِّنَ ٱلۡجِنِّ فَقَالُوٓاْ إِنَّا سَمِعۡنَا قُرۡءَانًا عَجَبًا١</td><td contenteditable='true'>قل أوحي إلي أنه استمع نفر من الجن فقالوا إنا سمعنا قرآنا عجبا</td></tr><tr><td>3</td><td contenteditable='true'>9</td><td contenteditable='true'>يَهۡدِىٓ إِلَى ٱلرُّشۡدِ فَـَٔامَنَّا بِهِۦۖ وَلَن نُّشۡرِكَ بِرَبِّنَآ أَحَدًا٢</td><td contenteditable='true'>يهدي إلى الرشد فآمنا به ولن نشرك بربنا أحدا</td></tr><tr><td>4</td><td contenteditable='true'>9</td><td contenteditable='true'>وَأَنَّهُۥ تَعَـٰلَىٰ جَدُّ رَبِّنَا مَا ٱتَّخَذَ صَـٰحِبَةً وَلَا وَلَدًا٣</td><td contenteditable='true'>وأنه تعالى جد ربنا ما اتخذ صاحبة ولا ولدا</td></tr><tr><td>5</td><td contenteditable='true'>7</td><td contenteditable='true'>وَأَنَّهُۥ كَانَ يَقُولُ سَفِيهُنَا عَلَى ٱللَّهِ شَطَطًا٤</td><td contenteditable='true'>وأنه كان يقول سفيهنا على الله شططا</td></tr><tr><td>6</td><td contenteditable='true'>10</td><td contenteditable='true'>وَأَنَّا ظَنَنَّآ أَن لَّن تَقُولَ ٱلۡإِنسُ وَٱلۡجِنُّ عَلَى ٱللَّهِ كَذِبًا٥</td><td contenteditable='true'>وأننا ظننا أن لن تقول الإنس والجن على الله كذبا</td></tr><tr><td>7</td><td contenteditable='true'>11</td><td contenteditable='true'>وَأَنَّهُۥ كَانَ رِجَالٌ مِّنَ ٱلۡإِنسِ يَعُوذُونَ بِرِجَالٍ مِّنَ ٱلۡجِنِّ فَزَادُوهُمۡ رَهَقًا٦</td><td contenteditable='true'>وأنه كان رجال من الإنس يعوذون برجال من الجن فزادوهم رهقا</td></tr><tr><td>8</td><td contenteditable='true'>9</td><td contenteditable='true'>وَأَنَّهُمۡ ظَنُّواْ كَمَا ظَنَنتُمۡ أَن لَّن يَبۡعَثَ ٱللَّهُ أَحَدًا٧</td><td contenteditable='true'>وأنهم ظنوا كما ظننتم أن لن يبعث الله أحدا</td></tr><tr><td>9</td><td contenteditable='true'>8</td><td contenteditable='true'>وَأَنَّا لَمَسۡنَا ٱلسَّمَآءَ فَوَجَدۡنَـٰهَا مُلِئَتۡ حَرَسًا شَدِيدًا وَشُهُبًا٨</td><td contenteditable='true'>وأننا لمسنا السماء فوجدناها ملئة حرسا شديدا وشهبا</td></tr><tr><td>10</td><td contenteditable='true'>13</td><td contenteditable='true'>وَأَنَّا كُنَّا نَقۡعُدُ مِنۡهَا مَقَـٰعِدَ لِلسَّمۡعِۖ فَمَن يَسۡتَمِعِ ٱلۡأٓنَ يَجِدۡ لَهُۥ شِهَابًا رَّصَدًا٩</td><td contenteditable='true'>وأننا كنا نقعد منها مقاعد للسمع فمن يستمع الآن يجد له شهابا رصدا</td></tr><tr><td>11</td><td contenteditable='true'>13</td><td contenteditable='true'>وَأَنَّا لَا نَدۡرِىٓ أَشَرٌّ أُرِيدَ بِمَن فِى ٱلۡأَرۡضِ أَمۡ أَرَادَ بِهِمۡ رَبُّهُمۡ رَشَدًا٠١</td><td contenteditable='true'>وأننا لا ندري أشرء أريد بمن في الأرض أم أراد بهم ربهم رشدا</td></tr><tr><td>12</td><td contenteditable='true'>9</td><td contenteditable='true'>وَأَنَّا مِنَّا ٱلصَّـٰلِحُونَ وَمِنَّا دُونَ ذَٰلِكَۖ كُنَّا طَرَآئِقَ قِدَدًا١١</td><td contenteditable='true'>وأننا منا الصالحون ومنا دون ذلك كنا طرائق قددا</td></tr><tr><td>13</td><td contenteditable='true'>11</td><td contenteditable='true'>وَأَنَّا ظَنَنَّآ أَن لَّن نُّعۡجِزَ ٱللَّهَ فِى ٱلۡأَرۡضِ وَلَن نُّعۡجِزَهُۥ هَرَبًا٢١</td><td contenteditable='true'>وأننا ظننا أن لن نعجز الله في الأرض ولن نعجزه هربا</td></tr><tr><td>14</td><td contenteditable='true'>14</td><td contenteditable='true'>وَأَنَّا لَمَّا سَمِعۡنَا ٱلۡهُدَىٰٓ ءَامَنَّا بِهِۦۖ فَمَن يُؤۡمِنۢ بِرَبِّهِۦ فَلَا يَخَافُ بَخۡسًا وَلَا رَهَقًا٣١</td><td contenteditable='true'>وأننا لما سمعنا الهدى آمنا به فمن يؤمن بربه فلا يخاف بخسا ولا رهقا</td></tr><tr><td>15</td><td contenteditable='true'>10</td><td contenteditable='true'>وَأَنَّا مِنَّا ٱلۡمُسۡلِمُونَ وَمِنَّا ٱلۡقَـٰسِطُونَۖ فَمَنۡ أَسۡلَمَ فَأُوْلَـٰٓئِكَ تَحَرَّوۡاْ رَشَدًا٤١</td><td contenteditable='true'>وأننا منا المسلمون ومنا القاسطون فمن أسلم فأولئك تحروا رشدا</td></tr><tr><td>16</td><td contenteditable='true'>5</td><td contenteditable='true'>وَأَمَّا ٱلۡقَـٰسِطُونَ فَكَانُواْ لِجَهَنَّمَ حَطَبًا٥١</td><td contenteditable='true'>وأنما القاسطون فكانوا لجهنم حطبا</td></tr><tr><td>17</td><td contenteditable='true'>7</td><td contenteditable='true'>وَأَلَّوِ ٱسۡتَقَـٰمُواْ عَلَى ٱلطَّرِيقَةِ لَأَسۡقَيۡنَـٰهُم مَّآءً غَدَقًا٦١</td><td contenteditable='true'>وأن لو استقاموا على الطريقة لأسقيناهم ماء غدقا لنفتنهم فيه</td></tr><tr><td>18</td><td contenteditable='true'>7</td><td contenteditable='true'>لِّنَفۡتِنَهُمۡ فِيهِۚ وَمَن يُعۡرِضۡ عَن ذِكۡرِ رَبِّهِۦ</td><td contenteditable='true'>ومن يعرض عن ذكر ربه يسلك عذابا صعدا</td></tr><tr><td>19</td><td contenteditable='true'>3</td><td contenteditable='true'>يَسۡلُكۡهُ عَذَابًا صَعَدًا٧١</td><td contenteditable='true'>وأن المساجد لله فلا تدعوا مع الله أحدا</td></tr><tr><td>20</td><td contenteditable='true'>10</td><td contenteditable='true'>مَعَ ٱللَّهِ أَحَدًا٨١ وَأَنَّهُۥ لَمَّا قَامَ عَبۡدُ ٱللَّهِ يَدۡعُوهُ كَادُواْ</td><td contenteditable='true'>وأنه لما قام عبد الله يدعوه كادوا يكونون عليه لبدا</td></tr><tr><td>21</td><td contenteditable='true'>8</td><td contenteditable='true'>يَكُونُونَ عَلَيۡهِ لِبَدًا٩١ قُلۡ إِنَّمَآ أَدۡعُواْ رَبِّى وَلَآ</td><td contenteditable='true'>قل إنما أدعو ربي ولا أشرك به أحدا</td></tr><tr><td>22</td><td contenteditable='true'>8</td><td contenteditable='true'>أُشۡرِكُ بِهِۦٓ أَحَدًا٠٢ قُلۡ إِنِّى لَآ أَمۡلِكُ لَكُمۡ</td><td contenteditable='true'>قل إني لا أملك لكم ضرا ولا رشدا</td></tr><tr><td>23</td><td contenteditable='true'>7</td><td contenteditable='true'>ضَرًّا وَلَا رَشَدًا١٢ قُلۡ إِنِّى لَن يُجِيرَنِى</td><td contenteditable='true'>قل إني لن يجيرني من الله أحدا</td></tr><tr><td>24</td><td contenteditable='true'>5</td><td contenteditable='true'>مِنَ ٱللَّهِ أَحَدٌ وَلَنۡ أَجِدَ</td><td contenteditable='true'>ولن أجد من دوني ملتحدا</td></tr><tr><td>25</td><td contenteditable='true'>5</td><td contenteditable='true'>مِن دُونِهِۦ مُلۡتَحَدًا٢٢ إِلَّا بَلَـٰغًا</td><td contenteditable='true'>إلا بلاغا من الله ورسالاته</td></tr><tr><td>26</td><td contenteditable='true'>8</td><td contenteditable='true'>مِّنَ ٱللَّهِ وَرِسَـٰلَـٰتِهِۦۚ وَمَن يَعۡصِ ٱللَّهَ وَرَسُولَهُۥ فَإِنَّ</td><td contenteditable='true'>ومن يعص الله ورسوله فإن له نار جهنم</td></tr><tr><td>27</td><td contenteditable='true'>3</td><td contenteditable='true'>لَهُۥ نَارَ جَهَنَّمَ</td><td contenteditable='true'>خالدين فيها أبدا</td></tr><tr><td>28</td><td contenteditable='true'>11</td><td contenteditable='true'>خَـٰلِدِينَ فِيهَآ أَبَدًا٣٢ حَتَّىٰٓ إِذَا رَأَوۡاْ مَا يُوعَدُونَ فَسَيَعۡلَمُونَ مَنۡ أَضۡعَفُ</td><td contenteditable='true'>حتى إذا رأوا ما يُعَدون فسيعلمون من أضعف ناصرا وأقل عددا</td></tr><tr><td>29</td><td contenteditable='true'>11</td><td contenteditable='true'>نَاصِرًا وَأَقَلُّ عَدَدًا٤٢ قُلۡ إِنۡ أَدۡرِىٓ أَقَرِيبٌ مَّا تُوعَدُونَ أَمۡ يَجۡعَلُ</td><td contenteditable='true'>قل إن أدري أقريب ما تُعَدون أم يجعل له ربي أمدا</td></tr><tr><td>30</td><td contenteditable='true'>7</td><td contenteditable='true'>لَهُۥ رَبِّىٓ أَمَدًا٥٢ عَـٰلِمُ ٱلۡغَيۡبِ فَلَا يُظۡهِرُ</td><td contenteditable='true'>عالم الغيب فلا يظهر على غيبه أحدا</td></tr><tr><td>31</td><td contenteditable='true'>13</td><td contenteditable='true'>عَلَىٰ غَيۡبِهِۦٓ أَحَدًا٦٢ إِلَّا مَنِ ٱرۡتَضَىٰ مِن رَّسُولٍ فَإِنَّهُۥ يَسۡلُكُ مِنۢ بَيۡنِ يَدَيۡهِ</td><td contenteditable='true'>إلا من ارتضى من رسول فإنه يسلك من بين يديه ومن خلفه رصدا</td></tr><tr><td>32</td><td contenteditable='true'>6</td><td contenteditable='true'>وَمِنۡ خَلۡفِهِۦ رَصَدًا٧٢ لِّيَعۡلَمَ أَن قَدۡ</td><td contenteditable='true'>يعلم أن قد أبلغوا رسالات ربهم</td></tr><tr><td>33</td><td contenteditable='true'>6</td><td contenteditable='true'>أَبۡلَغُواْ رِسَـٰلَـٰتِ رَبِّهِمۡ وَأَحَاطَ بِمَا لَدَيۡهِمۡ</td><td contenteditable='true'>وأحاط بما لديهم وأحصى كل شيء عددا</td></tr>\n",
              "            </tbody>\n",
              "        </table>\n",
              "        <button onclick=\"copyToClipboard()\">Copy</button>\n",
              "        <p id=\"copy_status\"></p>\n",
              "        <script>\n",
              "        // Save changes to localStorage\n",
              "        function saveTableToLocalStorage() {\n",
              "            var table = document.getElementById('editable_table');\n",
              "            var rows = Array.from(table.rows).slice(1); // skip header row\n",
              "            var tableData = rows.map(row => {\n",
              "                return {\n",
              "                    no: row.cells[0].innerText,\n",
              "                    wordCount: row.cells[1].innerText,\n",
              "                    mainText: row.cells[2].innerText,\n",
              "                    originalText: row.cells[3].innerText\n",
              "                };\n",
              "            });\n",
              "            localStorage.setItem('tableData', JSON.stringify(tableData));\n",
              "        }\n",
              "\n",
              "        // Load changes from localStorage\n",
              "        function loadTableFromLocalStorage() {\n",
              "            var tableData = JSON.parse(localStorage.getItem('tableData') || '[]');\n",
              "            var table = document.getElementById('editable_table').getElementsByTagName('tbody')[0];\n",
              "            tableData.forEach(data => {\n",
              "                var row = table.insertRow();\n",
              "                row.insertCell(0).innerText = data.no;\n",
              "                row.insertCell(1).innerText = data.wordCount;\n",
              "                row.insertCell(2).innerText = data.mainText;\n",
              "                row.insertCell(3).innerText = data.originalText;\n",
              "            });\n",
              "        }\n",
              "\n",
              "        // Copy to clipboard\n",
              "        function copyToClipboard() {\n",
              "            saveTableToLocalStorage();\n",
              "            var tableData = JSON.parse(localStorage.getItem('tableData') || '[]');\n",
              "            var text = tableData.map(data => data.wordCount).join(', ');\n",
              "            navigator.clipboard.writeText(text).then(function() {\n",
              "                var copyStatus = document.getElementById(\"copy_status\");\n",
              "                copyStatus.innerText = \"Copied to clipboard! Silahkan paste ke inputan Splits\";\n",
              "            });\n",
              "        }\n",
              "\n",
              "        document.addEventListener('DOMContentLoaded', loadTableFromLocalStorage);\n",
              "        document.getElementById('editable_table').addEventListener('input', saveTableToLocalStorage);\n",
              "        </script>\n",
              "    "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "IntText(value=72, description='Surah Number:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "46f5dd5bf3c941b58d6d873ba2ba3599"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "IntText(value=1, description='From Ayat:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "f94fa04fc96b42e89f9031900ccbbd12"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "IntText(value=28, description='To Ayat:')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "d097eec430c142bc844b59b04f7bfc17"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Text(value='4, 10, 9, 9, 7, 10, 11, 9, 8, 13, 13, 9, 11, 14, 10, 5, 7, 7, 8, 10, 8, 8, 7, 5, 5, 8, 3, 11, 11, …"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "d7d65b188f6a42daa5e0d00eaaf38aff"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='Run Kode Kedua', style=ButtonStyle())"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "da4765fd2ed14754aaaee33be5081cb5"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "00:00:00,000 --> 00:00:03,000\n",
            "بِسۡمِ ٱللَّهِ ٱلرَّحۡمَـٰنِ ٱلرَّحِیمِ\n",
            "\n",
            "2\n",
            "00:00:03,000 --> 00:00:17,000\n",
            "قُلۡ أُوحِىَ إِلَىَّ أَنَّهُ ٱسۡتَمَعَ نَفَرٌ مِّنَ ٱلۡجِنِّ فَقَالُوٓاْ إِنَّا سَمِعۡنَا قُرۡءَانًا عَجَبًا١\n",
            "\n",
            "3\n",
            "00:00:17,000 --> 00:00:28,000\n",
            "يَهۡدِىٓ إِلَى ٱلرُّشۡدِ فَـَٔامَنَّا بِهِۦۖ وَلَن نُّشۡرِكَ بِرَبِّنَآ أَحَدًا٢\n",
            "\n",
            "4\n",
            "00:00:28,000 --> 00:00:38,000\n",
            "وَأَنَّهُۥ تَعَـٰلَىٰ جَدُّ رَبِّنَا مَا ٱتَّخَذَ صَـٰحِبَةً وَلَا وَلَدًا٣\n",
            "\n",
            "5\n",
            "00:00:38,000 --> 00:00:46,000\n",
            "وَأَنَّهُۥ كَانَ يَقُولُ سَفِيهُنَا عَلَى ٱللَّهِ شَطَطًا٤\n",
            "\n",
            "6\n",
            "00:00:46,000 --> 00:00:58,000\n",
            "وَأَنَّا ظَنَنَّآ أَن لَّن تَقُولَ ٱلۡإِنسُ وَٱلۡجِنُّ عَلَى ٱللَّهِ كَذِبًا٥\n",
            "\n",
            "7\n",
            "00:00:58,000 --> 00:01:12,000\n",
            "وَأَنَّهُۥ كَانَ رِجَالٌ مِّنَ ٱلۡإِنسِ يَعُوذُونَ بِرِجَالٍ مِّنَ ٱلۡجِنِّ فَزَادُوهُمۡ رَهَقًا٦\n",
            "\n",
            "8\n",
            "00:01:12,000 --> 00:01:23,000\n",
            "وَأَنَّهُمۡ ظَنُّواْ كَمَا ظَنَنتُمۡ أَن لَّن يَبۡعَثَ ٱللَّهُ أَحَدًا٧\n",
            "\n",
            "9\n",
            "00:01:23,000 --> 00:01:35,000\n",
            "وَأَنَّا لَمَسۡنَا ٱلسَّمَآءَ فَوَجَدۡنَـٰهَا مُلِئَتۡ حَرَسًا شَدِيدًا وَشُهُبًا٨\n",
            "\n",
            "10\n",
            "00:01:35,000 --> 00:01:50,000\n",
            "وَأَنَّا كُنَّا نَقۡعُدُ مِنۡهَا مَقَـٰعِدَ لِلسَّمۡعِۖ فَمَن يَسۡتَمِعِ ٱلۡأٓنَ يَجِدۡ لَهُۥ شِهَابًا رَّصَدًا٩\n",
            "\n",
            "11\n",
            "00:01:50,000 --> 00:02:03,000\n",
            "وَأَنَّا لَا نَدۡرِىٓ أَشَرٌّ أُرِيدَ بِمَن فِى ٱلۡأَرۡضِ أَمۡ أَرَادَ بِهِمۡ رَبُّهُمۡ رَشَدًا٠١\n",
            "\n",
            "12\n",
            "00:02:03,000 --> 00:02:16,000\n",
            "وَأَنَّا مِنَّا ٱلصَّـٰلِحُونَ وَمِنَّا دُونَ ذَٰلِكَۖ كُنَّا طَرَآئِقَ قِدَدًا١١\n",
            "\n",
            "13\n",
            "00:02:16,000 --> 00:02:28,000\n",
            "وَأَنَّا ظَنَنَّآ أَن لَّن نُّعۡجِزَ ٱللَّهَ فِى ٱلۡأَرۡضِ وَلَن نُّعۡجِزَهُۥ هَرَبًا٢١\n",
            "\n",
            "14\n",
            "00:02:28,000 --> 00:02:51,000\n",
            "وَأَنَّا لَمَّا سَمِعۡنَا ٱلۡهُدَىٰٓ ءَامَنَّا بِهِۦۖ فَمَن يُؤۡمِنۢ بِرَبِّهِۦ فَلَا يَخَافُ بَخۡسًا وَلَا رَهَقًا٣١\n",
            "\n",
            "15\n",
            "00:02:51,000 --> 00:03:05,000\n",
            "وَأَنَّا مِنَّا ٱلۡمُسۡلِمُونَ وَمِنَّا ٱلۡقَـٰسِطُونَۖ فَمَنۡ أَسۡلَمَ فَأُوْلَـٰٓئِكَ تَحَرَّوۡاْ رَشَدًا٤١\n",
            "\n",
            "16\n",
            "00:03:06,000 --> 00:03:14,000\n",
            "وَأَمَّا ٱلۡقَـٰسِطُونَ فَكَانُواْ لِجَهَنَّمَ حَطَبًا٥١\n",
            "\n",
            "17\n",
            "00:03:14,000 --> 00:03:26,000\n",
            "وَأَلَّوِ ٱسۡتَقَـٰمُواْ عَلَى ٱلطَّرِيقَةِ لَأَسۡقَيۡنَـٰهُم مَّآءً غَدَقًا٦١ لِّنَفۡتِنَهُمۡ فِيهِۚ وَمَن\n",
            "\n",
            "18\n",
            "00:03:26,000 --> 00:03:36,000\n",
            "يُعۡرِضۡ عَن ذِكۡرِ رَبِّهِۦ يَسۡلُكۡهُ عَذَابًا صَعَدًا٧١ وَأَنَّ\n",
            "\n",
            "19\n",
            "00:03:36,000 --> 00:03:45,000\n",
            "ٱلۡمَسَـٰجِدَ لِلَّهِ فَلَا تَدۡعُواْ مَعَ ٱللَّهِ أَحَدًا٨١ وَأَنَّهُۥ\n",
            "\n",
            "20\n",
            "00:03:45,000 --> 00:03:56,000\n",
            "لَمَّا قَامَ عَبۡدُ ٱللَّهِ يَدۡعُوهُ كَادُواْ يَكُونُونَ عَلَيۡهِ لِبَدًا٩١ قُلۡ\n",
            "\n",
            "21\n",
            "00:03:56,000 --> 00:04:04,000\n",
            "إِنَّمَآ أَدۡعُواْ رَبِّى وَلَآ أُشۡرِكُ بِهِۦٓ أَحَدًا٠٢ قُلۡ\n",
            "\n",
            "22\n",
            "00:04:04,000 --> 00:04:11,000\n",
            "إِنِّى لَآ أَمۡلِكُ لَكُمۡ ضَرًّا وَلَا رَشَدًا١٢ قُلۡ\n",
            "\n",
            "23\n",
            "00:04:11,000 --> 00:04:18,000\n",
            "إِنِّى لَن يُجِيرَنِى مِنَ ٱللَّهِ أَحَدٌ وَلَنۡ\n",
            "\n",
            "24\n",
            "00:04:18,000 --> 00:04:23,000\n",
            "أَجِدَ مِن دُونِهِۦ مُلۡتَحَدًا٢٢ إِلَّا\n",
            "\n",
            "25\n",
            "00:04:23,000 --> 00:04:29,000\n",
            "بَلَـٰغًا مِّنَ ٱللَّهِ وَرِسَـٰلَـٰتِهِۦۚ وَمَن\n",
            "\n",
            "26\n",
            "00:04:29,000 --> 00:04:38,000\n",
            "يَعۡصِ ٱللَّهَ وَرَسُولَهُۥ فَإِنَّ لَهُۥ نَارَ جَهَنَّمَ خَـٰلِدِينَ\n",
            "\n",
            "27\n",
            "00:04:38,000 --> 00:04:42,000\n",
            "فِيهَآ أَبَدًا٣٢ حَتَّىٰٓ\n",
            "\n",
            "28\n",
            "00:04:42,000 --> 00:04:54,000\n",
            "إِذَا رَأَوۡاْ مَا يُوعَدُونَ فَسَيَعۡلَمُونَ مَنۡ أَضۡعَفُ نَاصِرًا وَأَقَلُّ عَدَدًا٤٢ قُلۡ\n",
            "\n",
            "29\n",
            "00:04:54,000 --> 00:05:04,000\n",
            "إِنۡ أَدۡرِىٓ أَقَرِيبٌ مَّا تُوعَدُونَ أَمۡ يَجۡعَلُ لَهُۥ رَبِّىٓ أَمَدًا٥٢ عَـٰلِمُ\n",
            "\n",
            "30\n",
            "00:05:04,000 --> 00:05:11,000\n",
            "ٱلۡغَيۡبِ فَلَا يُظۡهِرُ عَلَىٰ غَيۡبِهِۦٓ أَحَدًا٦٢ إِلَّا\n",
            "\n",
            "31\n",
            "00:05:11,000 --> 00:05:25,000\n",
            "مَنِ ٱرۡتَضَىٰ مِن رَّسُولٍ فَإِنَّهُۥ يَسۡلُكُ مِنۢ بَيۡنِ يَدَيۡهِ وَمِنۡ خَلۡفِهِۦ رَصَدًا٧٢ لِّيَعۡلَمَ\n",
            "\n",
            "32\n",
            "00:05:25,000 --> 00:05:32,000\n",
            "أَن قَدۡ أَبۡلَغُواْ رِسَـٰلَـٰتِ رَبِّهِمۡ وَأَحَاطَ\n",
            "\n",
            "33\n",
            "00:05:32,000 --> 00:05:42,000\n",
            "بِمَا لَدَيۡهِمۡ وَأَحۡصَىٰ كُلَّ شَىۡءٍ عَدَدًۢا٨٢\n",
            "\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='Copy', style=ButtonStyle())"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "481c011feed0478ebab3988167e5a940"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Label(value='')"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "a9a0695aa684450bbc95df670eb40389"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# @title 6. MENGHITUNG JUMLAH KATA UNTUK TRANSLATE { display-mode: \"form\" }\n",
        "# @markdown Klik untuk menghasilkan kode \"Group Size Input\" pada box \"Indonesian Translate\" dan kode \"Pattern\" pada box \"English Translate.\"\n",
        "\n",
        "def count_words_in_srt(file_path):\n",
        "    with open(file_path, 'r', encoding='utf-8') as file:\n",
        "        lines = file.readlines()\n",
        "\n",
        "    word_counts = []\n",
        "    is_subtitle_text = False\n",
        "\n",
        "    for line in lines:\n",
        "        cleaned_line = line.strip()\n",
        "\n",
        "        # Memeriksa apakah baris ini merupakan durasi\n",
        "        if \"-->\" in cleaned_line:\n",
        "            is_subtitle_text = True\n",
        "            continue\n",
        "\n",
        "        # Mengabaikan baris nomor urut\n",
        "        if cleaned_line.isdigit():\n",
        "            is_subtitle_text = False\n",
        "            continue\n",
        "\n",
        "        # Menghitung kata hanya pada baris teks subtitle\n",
        "        if is_subtitle_text and cleaned_line:\n",
        "            word_count = len(cleaned_line.split())\n",
        "            word_counts.append(word_count)\n",
        "\n",
        "    return word_counts\n",
        "\n",
        "# Menggunakan jalur file yang diberikan\n",
        "file_path = '/content/output_ayat.srt'\n",
        "word_counts = count_words_in_srt(file_path)\n",
        "\n",
        "# Menghapus angka 0 dari output\n",
        "word_counts = [count for count in word_counts if count != 0]\n",
        "\n",
        "# Mengganti angka pertama hasil penghitungan dengan angka 0\n",
        "if word_counts:\n",
        "    word_counts[0] = 0\n",
        "\n",
        "# Menggabungkan hasil penghitungan kata menjadi satu string\n",
        "result = ', '.join(map(str, word_counts))\n",
        "\n",
        "# Menampilkan hasil di output cell\n",
        "print(result)\n",
        "\n",
        "# Membuat elemen HTML dengan tombol salin\n",
        "from IPython.display import HTML, display\n",
        "\n",
        "display(HTML(f\"\"\"\n",
        "<textarea id=\"result\" style=\"display:none;\">{result}</textarea>\n",
        "<button onclick=\"copyToClipboard()\">Copy</button>\n",
        "<p id=\"confirmation\" style=\"color: green;\"></p>\n",
        "<script>\n",
        "function copyToClipboard() {{\n",
        "  var copyText = document.getElementById(\"result\");\n",
        "  copyText.style.display = 'block';\n",
        "  copyText.select();\n",
        "  copyText.setSelectionRange(0, 99999); // Untuk perangkat seluler\n",
        "  document.execCommand(\"copy\");\n",
        "  copyText.style.display = 'none';\n",
        "  document.getElementById(\"confirmation\").innerText = \"Copied to clipboard! Silahkan paste ke Group Size Input dan Pattern pada Translate!\";\n",
        "}}\n",
        "</script>\n",
        "\"\"\"))"
      ],
      "metadata": {
        "id": "kt-rJ_yTjGvj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# @title 7. MENTERJEMAHKAN AYAT QURAN TO INDONESIAN TRANSLATE { display-mode: \"form\" }\n",
        "# @markdown Isi parameter surah, ayat dan group size input kemudian klik proses. Catatan: jika murottal tanpa ta'awudz dan basmalah maka hapus angka \"0\" dan \",\" pada awal input group size input.\n",
        "\n",
        "import requests\n",
        "\n",
        "# Define parameters\n",
        "surah_number = 0  # @param {type:\"number\"}\n",
        "ayah_start = 0  # @param {type:\"number\"}\n",
        "ayah_end = 0  # @param {type:\"number\"}\n",
        "group_sizes_input = \"0, 0, 0\"  # @param {type:\"string\"}\n",
        "\n",
        "# Convert the group_sizes_input string to a list of integers\n",
        "group_sizes = [int(size.strip()) for size in group_sizes_input.split(',')]\n",
        "\n",
        "# Path to the existing SRT file\n",
        "srt_path = '/content/output_ayat.srt'\n",
        "\n",
        "# Function to fetch verses from the API\n",
        "def fetch_verses(surah, start, end, language=\"id\", translations=\"33\"):\n",
        "    verses = []\n",
        "    for ayah_number in range(start, end + 1):\n",
        "        endpoint = f\"https://api.quran.com/api/v4/verses/by_key/{surah}:{ayah_number}\"\n",
        "        params = {\n",
        "            \"language\": language,\n",
        "            \"words\": \"true\",\n",
        "            \"translations\": translations,\n",
        "            \"fields\": \"words,translation\"\n",
        "        }\n",
        "        response = requests.get(endpoint, params=params)\n",
        "        if response.status_code == 200:\n",
        "            verses.append(response.json()['verse'])\n",
        "        else:\n",
        "            print(f\"Error fetching Ayat {surah}:{ayah_number}: {response.status_code}\")\n",
        "    return verses\n",
        "\n",
        "# Function to extract translations from verses\n",
        "def extract_translations(verses):\n",
        "    translations = []\n",
        "    for ayah in verses:\n",
        "        words = ayah.get('words', [])\n",
        "        translations.extend([word['translation']['text'] for word in words if word['char_type_name'] != 'end'])\n",
        "    return translations\n",
        "\n",
        "# Function to process translations\n",
        "def process_translations(translations):\n",
        "    processed = []\n",
        "    for translation in translations:\n",
        "        if \"/\" in translation:\n",
        "            parts = translation.split('/')\n",
        "            processed.append(parts[0] + \" (\" + parts[1] + \")\")\n",
        "        else:\n",
        "            processed.append(translation)\n",
        "    return processed\n",
        "\n",
        "# Function to split translations into groups\n",
        "def split_into_groups(translations, group_sizes):\n",
        "    groups = []\n",
        "    start = 0\n",
        "    for size in group_sizes:\n",
        "        group = translations[start:start + size]\n",
        "        groups.append(' '.join(group))\n",
        "        start += size\n",
        "    return groups\n",
        "\n",
        "# Fetch the verses\n",
        "verses = fetch_verses(surah_number, ayah_start, ayah_end)\n",
        "\n",
        "# Extract translations\n",
        "translations = extract_translations(verses)\n",
        "\n",
        "# Process translations\n",
        "processed_translations = process_translations(translations)\n",
        "\n",
        "# Split translations into specified groups\n",
        "grouped_translations = split_into_groups(processed_translations, group_sizes)\n",
        "\n",
        "# Read the SRT file\n",
        "with open(srt_path, 'r', encoding='utf-8') as file:\n",
        "    srt_content = file.read()\n",
        "\n",
        "# Replace the subtitle text in the SRT file with the grouped translations\n",
        "srt_lines = srt_content.splitlines()\n",
        "subtitle_index = 0\n",
        "\n",
        "for i, line in enumerate(srt_lines):\n",
        "    if \"-->\" in line:\n",
        "        subtitle_index += 1\n",
        "        if subtitle_index <= len(grouped_translations):\n",
        "            srt_lines[i + 1] = grouped_translations[subtitle_index - 1]\n",
        "\n",
        "# Save the modified SRT content to a new file\n",
        "modified_srt_content = \"\\n\".join(srt_lines)\n",
        "with open('output_terjemahan.srt', 'w', encoding='utf-8') as file:\n",
        "    file.write(modified_srt_content)\n",
        "\n",
        "# Display the modified SRT content with a copy button\n",
        "from IPython.display import display, Javascript, HTML\n",
        "\n",
        "display(HTML('''\n",
        "    <textarea id=\"srtContent\" style=\"width:100%;height:200px;\">{}</textarea>\n",
        "    <button onclick=\"copyToClipboard()\">Copy</button>\n",
        "    <p id=\"copyMessage\" style=\"display:none;color:green;\">Copied to clipboard!</p>\n",
        "    <script>\n",
        "    function copyToClipboard() {{\n",
        "        var copyText = document.getElementById(\"srtContent\");\n",
        "        navigator.clipboard.writeText(copyText.value).then(function() {{\n",
        "            var copyMessage = document.getElementById(\"copyMessage\");\n",
        "            copyMessage.style.display = \"block\";\n",
        "            setTimeout(function() {{\n",
        "                copyMessage.style.display = \"none\";\n",
        "            }}, 2000);\n",
        "        }});\n",
        "    }}\n",
        "    </script>\n",
        "'''.format(modified_srt_content)))"
      ],
      "metadata": {
        "id": "BkfCrnJz7nI9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# @title Modify SRT File with Quran Translations { display-mode: \"form\" }\n",
        "# @markdown This script modifies an existing SRT file by replacing the subtitle text with Quran translations.\n",
        "\n",
        "import requests\n",
        "\n",
        "# Define parameters\n",
        "surah_number = 2  # @param {type:\"number\"}\n",
        "ayah_start = 3  # @param {type:\"number\"}\n",
        "ayah_end = 4  # @param {type:\"number\"}\n",
        "group_sizes_input = \"5, 3, 9, 3\"  # @param {type:\"string\"}\n",
        "\n",
        "# Convert the group_sizes_input string to a list of integers\n",
        "group_sizes = [int(size.strip()) for size in group_sizes_input.split(',')]\n",
        "\n",
        "# Path to the existing SRT file\n",
        "srt_path = '/content/output_ayat.srt'\n",
        "\n",
        "# Function to fetch verses from the API\n",
        "def fetch_verses(surah, start, end, language=\"en\", translations=\"131\"):  # Updated language and translation ID\n",
        "    verses = []\n",
        "    for ayah_number in range(start, end + 1):\n",
        "        endpoint = f\"https://api.quran.com/api/v4/verses/by_key/{surah}:{ayah_number}\"\n",
        "        params = {\n",
        "            \"language\": language,\n",
        "            \"words\": \"true\",\n",
        "            \"translations\": translations,\n",
        "            \"fields\": \"words,translation\"\n",
        "        }\n",
        "        response = requests.get(endpoint, params=params)\n",
        "        if response.status_code == 200:\n",
        "            verses.append(response.json()['verse'])\n",
        "        else:\n",
        "            print(f\"Error fetching Ayat {surah}:{ayah_number}: {response.status_code}\")\n",
        "    return verses\n",
        "\n",
        "# Function to extract translations from verses\n",
        "def extract_translations(verses):\n",
        "    translations = []\n",
        "    for ayah in verses:\n",
        "        words = ayah.get('words', [])\n",
        "        translations.extend([word['translation']['text'] for word in words if word['char_type_name'] != 'end'])\n",
        "    return translations\n",
        "\n",
        "# Function to split translations into groups\n",
        "def split_into_groups(translations, group_sizes):\n",
        "    groups = []\n",
        "    start = 0\n",
        "    for size in group_sizes:\n",
        "        group = translations[start:start + size]\n",
        "        groups.append(' '.join(group))\n",
        "        start += size\n",
        "    return groups\n",
        "\n",
        "# Fetch the verses\n",
        "verses = fetch_verses(surah_number, ayah_start, ayah_end)\n",
        "\n",
        "# Extract translations\n",
        "translations = extract_translations(verses)\n",
        "\n",
        "# Split translations into specified groups\n",
        "grouped_translations = split_into_groups(translations, group_sizes)\n",
        "\n",
        "# Read the SRT file\n",
        "with open(srt_path, 'r', encoding='utf-8') as file:\n",
        "    srt_content = file.read()\n",
        "\n",
        "# Replace the subtitle text in the SRT file with the grouped translations\n",
        "srt_lines = srt_content.splitlines()\n",
        "subtitle_index = 0\n",
        "\n",
        "for i, line in enumerate(srt_lines):\n",
        "    if \"-->\" in line:\n",
        "        subtitle_index += 1\n",
        "        if subtitle_index <= len(grouped_translations):\n",
        "            srt_lines[i + 1] = grouped_translations[subtitle_index - 1]\n",
        "\n",
        "# Save the modified SRT content to a new file\n",
        "modified_srt_content = \"\\n\".join(srt_lines)\n",
        "with open('output_terjemahan.srt', 'w', encoding='utf-8') as file:\n",
        "    file.write(modified_srt_content)\n",
        "\n",
        "# Display the modified SRT content with a copy button\n",
        "from IPython.display import display, Javascript, HTML\n",
        "\n",
        "display(HTML('''\n",
        "    <textarea id=\"srtContent\" style=\"width:100%;height:200px;\">{}</textarea>\n",
        "    <button onclick=\"copyToClipboard()\">Copy</button>\n",
        "    <p id=\"copyMessage\" style=\"display:none;color:green;\">Copied to clipboard!</p>\n",
        "    <script>\n",
        "    function copyToClipboard() {{\n",
        "        var copyText = document.getElementById(\"srtContent\");\n",
        "        navigator.clipboard.writeText(copyText.value).then(function() {{\n",
        "            var copyMessage = document.getElementById(\"copyMessage\");\n",
        "            copyMessage.style.display = \"block\";\n",
        "            setTimeout(function() {{\n",
        "                copyMessage.style.display = \"none\";\n",
        "            }}, 2000);\n",
        "        }});\n",
        "    }}\n",
        "    </script>\n",
        "'''.format(modified_srt_content)))"
      ],
      "metadata": {
        "id": "IuKy7TTwnKxS"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}